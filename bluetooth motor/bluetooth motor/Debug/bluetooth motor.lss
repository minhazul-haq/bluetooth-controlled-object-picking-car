
bluetooth motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000010bc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000008  00800060  000010bc  00001150  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000002  00800068  00800068  00001158  2**0
                  ALLOC
  3 .stab         000006cc  00000000  00000000  00001158  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000085  00000000  00000000  00001824  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000160  00000000  00000000  000018a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000221  00000000  00000000  00001a09  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001e51  00000000  00000000  00001c2a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000f02  00000000  00000000  00003a7b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000148f  00000000  00000000  0000497d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000200  00000000  00000000  00005e0c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000403  00000000  00000000  0000600c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000a79  00000000  00000000  0000640f  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_pubtypes 00000588  00000000  00000000  00006e88  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000030  00000000  00000000  00007410  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <__vector_11>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d4 e0       	ldi	r29, 0x04	; 4
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a8 e6       	ldi	r26, 0x68	; 104
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
      68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
      6a:	aa 36       	cpi	r26, 0x6A	; 106
      6c:	b1 07       	cpc	r27, r17
      6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>

00000070 <__do_copy_data>:
      70:	10 e0       	ldi	r17, 0x00	; 0
      72:	a0 e6       	ldi	r26, 0x60	; 96
      74:	b0 e0       	ldi	r27, 0x00	; 0
      76:	ec eb       	ldi	r30, 0xBC	; 188
      78:	f0 e1       	ldi	r31, 0x10	; 16
      7a:	02 c0       	rjmp	.+4      	; 0x80 <__do_copy_data+0x10>
      7c:	05 90       	lpm	r0, Z+
      7e:	0d 92       	st	X+, r0
      80:	a8 36       	cpi	r26, 0x68	; 104
      82:	b1 07       	cpc	r27, r17
      84:	d9 f7       	brne	.-10     	; 0x7c <__do_copy_data+0xc>
      86:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <main>
      8a:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <gear_forward>:
#define F_CPU 1000000UL

int isKeyReleased;

void gear_forward()
{
      92:	df 93       	push	r29
      94:	cf 93       	push	r28
      96:	cd b7       	in	r28, 0x3d	; 61
      98:	de b7       	in	r29, 0x3e	; 62
	PORTB = 0b01000010;
      9a:	88 e3       	ldi	r24, 0x38	; 56
      9c:	90 e0       	ldi	r25, 0x00	; 0
      9e:	22 e4       	ldi	r18, 0x42	; 66
      a0:	fc 01       	movw	r30, r24
      a2:	20 83       	st	Z, r18
}
      a4:	cf 91       	pop	r28
      a6:	df 91       	pop	r29
      a8:	08 95       	ret

000000aa <gear_backward>:

void gear_backward()
{
      aa:	df 93       	push	r29
      ac:	cf 93       	push	r28
      ae:	cd b7       	in	r28, 0x3d	; 61
      b0:	de b7       	in	r29, 0x3e	; 62
	PORTB = 0b00100001;
      b2:	88 e3       	ldi	r24, 0x38	; 56
      b4:	90 e0       	ldi	r25, 0x00	; 0
      b6:	21 e2       	ldi	r18, 0x21	; 33
      b8:	fc 01       	movw	r30, r24
      ba:	20 83       	st	Z, r18
}
      bc:	cf 91       	pop	r28
      be:	df 91       	pop	r29
      c0:	08 95       	ret

000000c2 <gear_left>:

void gear_left()
{
      c2:	df 93       	push	r29
      c4:	cf 93       	push	r28
      c6:	cd b7       	in	r28, 0x3d	; 61
      c8:	de b7       	in	r29, 0x3e	; 62
	PORTB = 0b01000001;
      ca:	88 e3       	ldi	r24, 0x38	; 56
      cc:	90 e0       	ldi	r25, 0x00	; 0
      ce:	21 e4       	ldi	r18, 0x41	; 65
      d0:	fc 01       	movw	r30, r24
      d2:	20 83       	st	Z, r18
}
      d4:	cf 91       	pop	r28
      d6:	df 91       	pop	r29
      d8:	08 95       	ret

000000da <gear_right>:

void gear_right()
{
      da:	df 93       	push	r29
      dc:	cf 93       	push	r28
      de:	cd b7       	in	r28, 0x3d	; 61
      e0:	de b7       	in	r29, 0x3e	; 62
	PORTB = 0b00100010;
      e2:	88 e3       	ldi	r24, 0x38	; 56
      e4:	90 e0       	ldi	r25, 0x00	; 0
      e6:	22 e2       	ldi	r18, 0x22	; 34
      e8:	fc 01       	movw	r30, r24
      ea:	20 83       	st	Z, r18
}
      ec:	cf 91       	pop	r28
      ee:	df 91       	pop	r29
      f0:	08 95       	ret

000000f2 <keyReleased>:

void keyReleased()
{
      f2:	df 93       	push	r29
      f4:	cf 93       	push	r28
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
	isKeyReleased = 1;
      fa:	81 e0       	ldi	r24, 0x01	; 1
      fc:	90 e0       	ldi	r25, 0x00	; 0
      fe:	90 93 69 00 	sts	0x0069, r25
     102:	80 93 68 00 	sts	0x0068, r24
	PORTB = 0x00;
     106:	88 e3       	ldi	r24, 0x38	; 56
     108:	90 e0       	ldi	r25, 0x00	; 0
     10a:	fc 01       	movw	r30, r24
     10c:	10 82       	st	Z, r1
}
     10e:	cf 91       	pop	r28
     110:	df 91       	pop	r29
     112:	08 95       	ret

00000114 <servo_expand>:

void servo_expand()
{
     114:	0f 93       	push	r16
     116:	1f 93       	push	r17
     118:	df 93       	push	r29
     11a:	cf 93       	push	r28
     11c:	cd b7       	in	r28, 0x3d	; 61
     11e:	de b7       	in	r29, 0x3e	; 62
     120:	2e 97       	sbiw	r28, 0x0e	; 14
     122:	0f b6       	in	r0, 0x3f	; 63
     124:	f8 94       	cli
     126:	de bf       	out	0x3e, r29	; 62
     128:	0f be       	out	0x3f, r0	; 63
     12a:	cd bf       	out	0x3d, r28	; 61
	if (isKeyReleased==0) 
     12c:	80 91 68 00 	lds	r24, 0x0068
     130:	90 91 69 00 	lds	r25, 0x0069
     134:	00 97       	sbiw	r24, 0x00	; 0
     136:	09 f0       	breq	.+2      	; 0x13a <servo_expand+0x26>
     138:	95 c0       	rjmp	.+298    	; 0x264 <servo_expand+0x150>
	{
		if (OCR1A<2350) OCR1A += 100;
     13a:	8a e4       	ldi	r24, 0x4A	; 74
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	fc 01       	movw	r30, r24
     140:	80 81       	ld	r24, Z
     142:	91 81       	ldd	r25, Z+1	; 0x01
     144:	f9 e0       	ldi	r31, 0x09	; 9
     146:	8e 32       	cpi	r24, 0x2E	; 46
     148:	9f 07       	cpc	r25, r31
     14a:	60 f4       	brcc	.+24     	; 0x164 <servo_expand+0x50>
     14c:	8a e4       	ldi	r24, 0x4A	; 74
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	2a e4       	ldi	r18, 0x4A	; 74
     152:	30 e0       	ldi	r19, 0x00	; 0
     154:	f9 01       	movw	r30, r18
     156:	20 81       	ld	r18, Z
     158:	31 81       	ldd	r19, Z+1	; 0x01
     15a:	2c 59       	subi	r18, 0x9C	; 156
     15c:	3f 4f       	sbci	r19, 0xFF	; 255
     15e:	fc 01       	movw	r30, r24
     160:	31 83       	std	Z+1, r19	; 0x01
     162:	20 83       	st	Z, r18
     164:	80 e0       	ldi	r24, 0x00	; 0
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	a8 e4       	ldi	r26, 0x48	; 72
     16a:	b2 e4       	ldi	r27, 0x42	; 66
     16c:	89 83       	std	Y+1, r24	; 0x01
     16e:	9a 83       	std	Y+2, r25	; 0x02
     170:	ab 83       	std	Y+3, r26	; 0x03
     172:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     174:	69 81       	ldd	r22, Y+1	; 0x01
     176:	7a 81       	ldd	r23, Y+2	; 0x02
     178:	8b 81       	ldd	r24, Y+3	; 0x03
     17a:	9c 81       	ldd	r25, Y+4	; 0x04
     17c:	20 e0       	ldi	r18, 0x00	; 0
     17e:	30 e0       	ldi	r19, 0x00	; 0
     180:	4a e7       	ldi	r20, 0x7A	; 122
     182:	53 e4       	ldi	r21, 0x43	; 67
     184:	0e 94 b9 04 	call	0x972	; 0x972 <__mulsf3>
     188:	dc 01       	movw	r26, r24
     18a:	cb 01       	movw	r24, r22
     18c:	8d 83       	std	Y+5, r24	; 0x05
     18e:	9e 83       	std	Y+6, r25	; 0x06
     190:	af 83       	std	Y+7, r26	; 0x07
     192:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     194:	11 e0       	ldi	r17, 0x01	; 1
     196:	6d 81       	ldd	r22, Y+5	; 0x05
     198:	7e 81       	ldd	r23, Y+6	; 0x06
     19a:	8f 81       	ldd	r24, Y+7	; 0x07
     19c:	98 85       	ldd	r25, Y+8	; 0x08
     19e:	20 e0       	ldi	r18, 0x00	; 0
     1a0:	30 e0       	ldi	r19, 0x00	; 0
     1a2:	40 e8       	ldi	r20, 0x80	; 128
     1a4:	5f e3       	ldi	r21, 0x3F	; 63
     1a6:	0e 94 13 06 	call	0xc26	; 0xc26 <__ltsf2>
     1aa:	88 23       	and	r24, r24
     1ac:	0c f0       	brlt	.+2      	; 0x1b0 <servo_expand+0x9c>
     1ae:	10 e0       	ldi	r17, 0x00	; 0
     1b0:	11 23       	and	r17, r17
     1b2:	29 f0       	breq	.+10     	; 0x1be <servo_expand+0xaa>
		__ticks = 1;
     1b4:	81 e0       	ldi	r24, 0x01	; 1
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	9a 87       	std	Y+10, r25	; 0x0a
     1ba:	89 87       	std	Y+9, r24	; 0x09
     1bc:	46 c0       	rjmp	.+140    	; 0x24a <servo_expand+0x136>
	else if (__tmp > 65535)
     1be:	11 e0       	ldi	r17, 0x01	; 1
     1c0:	6d 81       	ldd	r22, Y+5	; 0x05
     1c2:	7e 81       	ldd	r23, Y+6	; 0x06
     1c4:	8f 81       	ldd	r24, Y+7	; 0x07
     1c6:	98 85       	ldd	r25, Y+8	; 0x08
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	3f ef       	ldi	r19, 0xFF	; 255
     1cc:	4f e7       	ldi	r20, 0x7F	; 127
     1ce:	57 e4       	ldi	r21, 0x47	; 71
     1d0:	0e 94 b3 05 	call	0xb66	; 0xb66 <__gtsf2>
     1d4:	18 16       	cp	r1, r24
     1d6:	0c f0       	brlt	.+2      	; 0x1da <servo_expand+0xc6>
     1d8:	10 e0       	ldi	r17, 0x00	; 0
     1da:	11 23       	and	r17, r17
     1dc:	61 f1       	breq	.+88     	; 0x236 <servo_expand+0x122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     1de:	69 81       	ldd	r22, Y+1	; 0x01
     1e0:	7a 81       	ldd	r23, Y+2	; 0x02
     1e2:	8b 81       	ldd	r24, Y+3	; 0x03
     1e4:	9c 81       	ldd	r25, Y+4	; 0x04
     1e6:	20 e0       	ldi	r18, 0x00	; 0
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	40 e2       	ldi	r20, 0x20	; 32
     1ec:	51 e4       	ldi	r21, 0x41	; 65
     1ee:	0e 94 b9 04 	call	0x972	; 0x972 <__mulsf3>
     1f2:	dc 01       	movw	r26, r24
     1f4:	cb 01       	movw	r24, r22
     1f6:	bc 01       	movw	r22, r24
     1f8:	cd 01       	movw	r24, r26
     1fa:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fixunssfsi>
     1fe:	dc 01       	movw	r26, r24
     200:	cb 01       	movw	r24, r22
     202:	9a 87       	std	Y+10, r25	; 0x0a
     204:	89 87       	std	Y+9, r24	; 0x09
     206:	12 c0       	rjmp	.+36     	; 0x22c <servo_expand+0x118>
     208:	89 e1       	ldi	r24, 0x19	; 25
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	9c 87       	std	Y+12, r25	; 0x0c
     20e:	8b 87       	std	Y+11, r24	; 0x0b
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     210:	8b 85       	ldd	r24, Y+11	; 0x0b
     212:	9c 85       	ldd	r25, Y+12	; 0x0c
     214:	8c 01       	movw	r16, r24
     216:	c8 01       	movw	r24, r16
     218:	01 97       	sbiw	r24, 0x01	; 1
     21a:	f1 f7       	brne	.-4      	; 0x218 <servo_expand+0x104>
     21c:	8c 01       	movw	r16, r24
     21e:	1c 87       	std	Y+12, r17	; 0x0c
     220:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     222:	89 85       	ldd	r24, Y+9	; 0x09
     224:	9a 85       	ldd	r25, Y+10	; 0x0a
     226:	01 97       	sbiw	r24, 0x01	; 1
     228:	9a 87       	std	Y+10, r25	; 0x0a
     22a:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     22c:	89 85       	ldd	r24, Y+9	; 0x09
     22e:	9a 85       	ldd	r25, Y+10	; 0x0a
     230:	00 97       	sbiw	r24, 0x00	; 0
     232:	51 f7       	brne	.-44     	; 0x208 <servo_expand+0xf4>
     234:	17 c0       	rjmp	.+46     	; 0x264 <servo_expand+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     236:	6d 81       	ldd	r22, Y+5	; 0x05
     238:	7e 81       	ldd	r23, Y+6	; 0x06
     23a:	8f 81       	ldd	r24, Y+7	; 0x07
     23c:	98 85       	ldd	r25, Y+8	; 0x08
     23e:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fixunssfsi>
     242:	dc 01       	movw	r26, r24
     244:	cb 01       	movw	r24, r22
     246:	9a 87       	std	Y+10, r25	; 0x0a
     248:	89 87       	std	Y+9, r24	; 0x09
     24a:	89 85       	ldd	r24, Y+9	; 0x09
     24c:	9a 85       	ldd	r25, Y+10	; 0x0a
     24e:	9e 87       	std	Y+14, r25	; 0x0e
     250:	8d 87       	std	Y+13, r24	; 0x0d
     252:	8d 85       	ldd	r24, Y+13	; 0x0d
     254:	9e 85       	ldd	r25, Y+14	; 0x0e
     256:	8c 01       	movw	r16, r24
     258:	f8 01       	movw	r30, r16
     25a:	31 97       	sbiw	r30, 0x01	; 1
     25c:	f1 f7       	brne	.-4      	; 0x25a <servo_expand+0x146>
     25e:	8f 01       	movw	r16, r30
     260:	1e 87       	std	Y+14, r17	; 0x0e
     262:	0d 87       	std	Y+13, r16	; 0x0d
		_delay_ms(50);
	}
}
     264:	2e 96       	adiw	r28, 0x0e	; 14
     266:	0f b6       	in	r0, 0x3f	; 63
     268:	f8 94       	cli
     26a:	de bf       	out	0x3e, r29	; 62
     26c:	0f be       	out	0x3f, r0	; 63
     26e:	cd bf       	out	0x3d, r28	; 61
     270:	cf 91       	pop	r28
     272:	df 91       	pop	r29
     274:	1f 91       	pop	r17
     276:	0f 91       	pop	r16
     278:	08 95       	ret

0000027a <servo_compress>:

void servo_compress()
{
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	df 93       	push	r29
     280:	cf 93       	push	r28
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	2e 97       	sbiw	r28, 0x0e	; 14
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61
	if (isKeyReleased==0) 
     292:	80 91 68 00 	lds	r24, 0x0068
     296:	90 91 69 00 	lds	r25, 0x0069
     29a:	00 97       	sbiw	r24, 0x00	; 0
     29c:	09 f0       	breq	.+2      	; 0x2a0 <servo_compress+0x26>
     29e:	95 c0       	rjmp	.+298    	; 0x3ca <servo_compress+0x150>
	{
		if (OCR1A>830) OCR1A -= 100;
     2a0:	8a e4       	ldi	r24, 0x4A	; 74
     2a2:	90 e0       	ldi	r25, 0x00	; 0
     2a4:	fc 01       	movw	r30, r24
     2a6:	80 81       	ld	r24, Z
     2a8:	91 81       	ldd	r25, Z+1	; 0x01
     2aa:	f3 e0       	ldi	r31, 0x03	; 3
     2ac:	8f 33       	cpi	r24, 0x3F	; 63
     2ae:	9f 07       	cpc	r25, r31
     2b0:	60 f0       	brcs	.+24     	; 0x2ca <servo_compress+0x50>
     2b2:	8a e4       	ldi	r24, 0x4A	; 74
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	2a e4       	ldi	r18, 0x4A	; 74
     2b8:	30 e0       	ldi	r19, 0x00	; 0
     2ba:	f9 01       	movw	r30, r18
     2bc:	20 81       	ld	r18, Z
     2be:	31 81       	ldd	r19, Z+1	; 0x01
     2c0:	24 56       	subi	r18, 0x64	; 100
     2c2:	30 40       	sbci	r19, 0x00	; 0
     2c4:	fc 01       	movw	r30, r24
     2c6:	31 83       	std	Z+1, r19	; 0x01
     2c8:	20 83       	st	Z, r18
     2ca:	80 e0       	ldi	r24, 0x00	; 0
     2cc:	90 e0       	ldi	r25, 0x00	; 0
     2ce:	a8 e4       	ldi	r26, 0x48	; 72
     2d0:	b2 e4       	ldi	r27, 0x42	; 66
     2d2:	89 83       	std	Y+1, r24	; 0x01
     2d4:	9a 83       	std	Y+2, r25	; 0x02
     2d6:	ab 83       	std	Y+3, r26	; 0x03
     2d8:	bc 83       	std	Y+4, r27	; 0x04
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);

#elif !__HAS_DELAY_CYCLES || (__HAS_DELAY_CYCLES && !defined(__OPTIMIZE__)) || defined (__DELAY_BACKWARD_COMPATIBLE__)
	__tmp = ((F_CPU) / 4e3) * __ms;
     2da:	69 81       	ldd	r22, Y+1	; 0x01
     2dc:	7a 81       	ldd	r23, Y+2	; 0x02
     2de:	8b 81       	ldd	r24, Y+3	; 0x03
     2e0:	9c 81       	ldd	r25, Y+4	; 0x04
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	4a e7       	ldi	r20, 0x7A	; 122
     2e8:	53 e4       	ldi	r21, 0x43	; 67
     2ea:	0e 94 b9 04 	call	0x972	; 0x972 <__mulsf3>
     2ee:	dc 01       	movw	r26, r24
     2f0:	cb 01       	movw	r24, r22
     2f2:	8d 83       	std	Y+5, r24	; 0x05
     2f4:	9e 83       	std	Y+6, r25	; 0x06
     2f6:	af 83       	std	Y+7, r26	; 0x07
     2f8:	b8 87       	std	Y+8, r27	; 0x08
	if (__tmp < 1.0)
     2fa:	11 e0       	ldi	r17, 0x01	; 1
     2fc:	6d 81       	ldd	r22, Y+5	; 0x05
     2fe:	7e 81       	ldd	r23, Y+6	; 0x06
     300:	8f 81       	ldd	r24, Y+7	; 0x07
     302:	98 85       	ldd	r25, Y+8	; 0x08
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e8       	ldi	r20, 0x80	; 128
     30a:	5f e3       	ldi	r21, 0x3F	; 63
     30c:	0e 94 13 06 	call	0xc26	; 0xc26 <__ltsf2>
     310:	88 23       	and	r24, r24
     312:	0c f0       	brlt	.+2      	; 0x316 <servo_compress+0x9c>
     314:	10 e0       	ldi	r17, 0x00	; 0
     316:	11 23       	and	r17, r17
     318:	29 f0       	breq	.+10     	; 0x324 <servo_compress+0xaa>
		__ticks = 1;
     31a:	81 e0       	ldi	r24, 0x01	; 1
     31c:	90 e0       	ldi	r25, 0x00	; 0
     31e:	9a 87       	std	Y+10, r25	; 0x0a
     320:	89 87       	std	Y+9, r24	; 0x09
     322:	46 c0       	rjmp	.+140    	; 0x3b0 <servo_compress+0x136>
	else if (__tmp > 65535)
     324:	11 e0       	ldi	r17, 0x01	; 1
     326:	6d 81       	ldd	r22, Y+5	; 0x05
     328:	7e 81       	ldd	r23, Y+6	; 0x06
     32a:	8f 81       	ldd	r24, Y+7	; 0x07
     32c:	98 85       	ldd	r25, Y+8	; 0x08
     32e:	20 e0       	ldi	r18, 0x00	; 0
     330:	3f ef       	ldi	r19, 0xFF	; 255
     332:	4f e7       	ldi	r20, 0x7F	; 127
     334:	57 e4       	ldi	r21, 0x47	; 71
     336:	0e 94 b3 05 	call	0xb66	; 0xb66 <__gtsf2>
     33a:	18 16       	cp	r1, r24
     33c:	0c f0       	brlt	.+2      	; 0x340 <servo_compress+0xc6>
     33e:	10 e0       	ldi	r17, 0x00	; 0
     340:	11 23       	and	r17, r17
     342:	61 f1       	breq	.+88     	; 0x39c <servo_compress+0x122>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     344:	69 81       	ldd	r22, Y+1	; 0x01
     346:	7a 81       	ldd	r23, Y+2	; 0x02
     348:	8b 81       	ldd	r24, Y+3	; 0x03
     34a:	9c 81       	ldd	r25, Y+4	; 0x04
     34c:	20 e0       	ldi	r18, 0x00	; 0
     34e:	30 e0       	ldi	r19, 0x00	; 0
     350:	40 e2       	ldi	r20, 0x20	; 32
     352:	51 e4       	ldi	r21, 0x41	; 65
     354:	0e 94 b9 04 	call	0x972	; 0x972 <__mulsf3>
     358:	dc 01       	movw	r26, r24
     35a:	cb 01       	movw	r24, r22
     35c:	bc 01       	movw	r22, r24
     35e:	cd 01       	movw	r24, r26
     360:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fixunssfsi>
     364:	dc 01       	movw	r26, r24
     366:	cb 01       	movw	r24, r22
     368:	9a 87       	std	Y+10, r25	; 0x0a
     36a:	89 87       	std	Y+9, r24	; 0x09
     36c:	12 c0       	rjmp	.+36     	; 0x392 <servo_compress+0x118>
     36e:	89 e1       	ldi	r24, 0x19	; 25
     370:	90 e0       	ldi	r25, 0x00	; 0
     372:	9c 87       	std	Y+12, r25	; 0x0c
     374:	8b 87       	std	Y+11, r24	; 0x0b
     376:	8b 85       	ldd	r24, Y+11	; 0x0b
     378:	9c 85       	ldd	r25, Y+12	; 0x0c
     37a:	8c 01       	movw	r16, r24
     37c:	c8 01       	movw	r24, r16
     37e:	01 97       	sbiw	r24, 0x01	; 1
     380:	f1 f7       	brne	.-4      	; 0x37e <servo_compress+0x104>
     382:	8c 01       	movw	r16, r24
     384:	1c 87       	std	Y+12, r17	; 0x0c
     386:	0b 87       	std	Y+11, r16	; 0x0b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     388:	89 85       	ldd	r24, Y+9	; 0x09
     38a:	9a 85       	ldd	r25, Y+10	; 0x0a
     38c:	01 97       	sbiw	r24, 0x01	; 1
     38e:	9a 87       	std	Y+10, r25	; 0x0a
     390:	89 87       	std	Y+9, r24	; 0x09
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     392:	89 85       	ldd	r24, Y+9	; 0x09
     394:	9a 85       	ldd	r25, Y+10	; 0x0a
     396:	00 97       	sbiw	r24, 0x00	; 0
     398:	51 f7       	brne	.-44     	; 0x36e <servo_compress+0xf4>
     39a:	17 c0       	rjmp	.+46     	; 0x3ca <servo_compress+0x150>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     39c:	6d 81       	ldd	r22, Y+5	; 0x05
     39e:	7e 81       	ldd	r23, Y+6	; 0x06
     3a0:	8f 81       	ldd	r24, Y+7	; 0x07
     3a2:	98 85       	ldd	r25, Y+8	; 0x08
     3a4:	0e 94 e5 02 	call	0x5ca	; 0x5ca <__fixunssfsi>
     3a8:	dc 01       	movw	r26, r24
     3aa:	cb 01       	movw	r24, r22
     3ac:	9a 87       	std	Y+10, r25	; 0x0a
     3ae:	89 87       	std	Y+9, r24	; 0x09
     3b0:	89 85       	ldd	r24, Y+9	; 0x09
     3b2:	9a 85       	ldd	r25, Y+10	; 0x0a
     3b4:	9e 87       	std	Y+14, r25	; 0x0e
     3b6:	8d 87       	std	Y+13, r24	; 0x0d
     3b8:	8d 85       	ldd	r24, Y+13	; 0x0d
     3ba:	9e 85       	ldd	r25, Y+14	; 0x0e
     3bc:	8c 01       	movw	r16, r24
     3be:	f8 01       	movw	r30, r16
     3c0:	31 97       	sbiw	r30, 0x01	; 1
     3c2:	f1 f7       	brne	.-4      	; 0x3c0 <servo_compress+0x146>
     3c4:	8f 01       	movw	r16, r30
     3c6:	1e 87       	std	Y+14, r17	; 0x0e
     3c8:	0d 87       	std	Y+13, r16	; 0x0d
		_delay_ms(50);
	}
}
     3ca:	2e 96       	adiw	r28, 0x0e	; 14
     3cc:	0f b6       	in	r0, 0x3f	; 63
     3ce:	f8 94       	cli
     3d0:	de bf       	out	0x3e, r29	; 62
     3d2:	0f be       	out	0x3f, r0	; 63
     3d4:	cd bf       	out	0x3d, r28	; 61
     3d6:	cf 91       	pop	r28
     3d8:	df 91       	pop	r29
     3da:	1f 91       	pop	r17
     3dc:	0f 91       	pop	r16
     3de:	08 95       	ret

000003e0 <__vector_11>:

//Serial com. Interrupt Service Routine (runs each time a byte is received)
ISR(USART_RXC_vect)
{
     3e0:	1f 92       	push	r1
     3e2:	0f 92       	push	r0
     3e4:	0f b6       	in	r0, 0x3f	; 63
     3e6:	0f 92       	push	r0
     3e8:	11 24       	eor	r1, r1
     3ea:	2f 93       	push	r18
     3ec:	3f 93       	push	r19
     3ee:	4f 93       	push	r20
     3f0:	5f 93       	push	r21
     3f2:	6f 93       	push	r22
     3f4:	7f 93       	push	r23
     3f6:	8f 93       	push	r24
     3f8:	9f 93       	push	r25
     3fa:	af 93       	push	r26
     3fc:	bf 93       	push	r27
     3fe:	ef 93       	push	r30
     400:	ff 93       	push	r31
     402:	df 93       	push	r29
     404:	cf 93       	push	r28
     406:	0f 92       	push	r0
     408:	cd b7       	in	r28, 0x3d	; 61
     40a:	de b7       	in	r29, 0x3e	; 62
	char dat = UDR;
     40c:	8c e2       	ldi	r24, 0x2C	; 44
     40e:	90 e0       	ldi	r25, 0x00	; 0
     410:	fc 01       	movw	r30, r24
     412:	80 81       	ld	r24, Z
     414:	89 83       	std	Y+1, r24	; 0x01
		
	switch (dat) //Which ASCII character was received?
     416:	89 81       	ldd	r24, Y+1	; 0x01
     418:	88 2f       	mov	r24, r24
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	80 38       	cpi	r24, 0x80	; 128
     41e:	91 05       	cpc	r25, r1
     420:	b9 f0       	breq	.+46     	; 0x450 <__vector_11+0x70>
     422:	81 38       	cpi	r24, 0x81	; 129
     424:	91 05       	cpc	r25, r1
     426:	54 f4       	brge	.+20     	; 0x43c <__vector_11+0x5c>
     428:	82 30       	cpi	r24, 0x02	; 2
     42a:	91 05       	cpc	r25, r1
     42c:	69 f1       	breq	.+90     	; 0x488 <__stack+0x29>
     42e:	8c 30       	cpi	r24, 0x0C	; 12
     430:	91 05       	cpc	r25, r1
     432:	b1 f1       	breq	.+108    	; 0x4a0 <__stack+0x41>
     434:	00 97       	sbiw	r24, 0x00	; 0
     436:	09 f4       	brne	.+2      	; 0x43a <__vector_11+0x5a>
     438:	3f c0       	rjmp	.+126    	; 0x4b8 <__stack+0x59>
     43a:	45 c0       	rjmp	.+138    	; 0x4c6 <__stack+0x67>
     43c:	8c 38       	cpi	r24, 0x8C	; 140
     43e:	91 05       	cpc	r25, r1
     440:	a9 f0       	breq	.+42     	; 0x46c <__stack+0xd>
     442:	8e 38       	cpi	r24, 0x8E	; 142
     444:	91 05       	cpc	r25, r1
     446:	c9 f0       	breq	.+50     	; 0x47a <__stack+0x1b>
     448:	82 38       	cpi	r24, 0x82	; 130
     44a:	91 05       	cpc	r25, r1
     44c:	41 f0       	breq	.+16     	; 0x45e <__vector_11+0x7e>
     44e:	3b c0       	rjmp	.+118    	; 0x4c6 <__stack+0x67>
    {
		//up key
		case 128:   
			gear_forward();
     450:	0e 94 49 00 	call	0x92	; 0x92 <gear_forward>
			PORTA = 0x00;
     454:	8b e3       	ldi	r24, 0x3B	; 59
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	fc 01       	movw	r30, r24
     45a:	10 82       	st	Z, r1
			break;
     45c:	38 c0       	rjmp	.+112    	; 0x4ce <__stack+0x6f>
        //left key
		case 130: 
			gear_left();
     45e:	0e 94 61 00 	call	0xc2	; 0xc2 <gear_left>
			PORTA = 0x00;
     462:	8b e3       	ldi	r24, 0x3B	; 59
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	fc 01       	movw	r30, r24
     468:	10 82       	st	Z, r1
			break;
     46a:	31 c0       	rjmp	.+98     	; 0x4ce <__stack+0x6f>
        //down key
		case 140:  
			gear_backward();
     46c:	0e 94 55 00 	call	0xaa	; 0xaa <gear_backward>
            PORTA = 0x00;
     470:	8b e3       	ldi	r24, 0x3B	; 59
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	fc 01       	movw	r30, r24
     476:	10 82       	st	Z, r1
			break;
     478:	2a c0       	rjmp	.+84     	; 0x4ce <__stack+0x6f>
        //right key
		case 142:  
			gear_right();
     47a:	0e 94 6d 00 	call	0xda	; 0xda <gear_right>
			PORTA = 0x00;
     47e:	8b e3       	ldi	r24, 0x3B	; 59
     480:	90 e0       	ldi	r25, 0x00	; 0
     482:	fc 01       	movw	r30, r24
     484:	10 82       	st	Z, r1
			break;
     486:	23 c0       	rjmp	.+70     	; 0x4ce <__stack+0x6f>
        //expand key
		case 2:
			isKeyReleased = 0;
     488:	10 92 69 00 	sts	0x0069, r1
     48c:	10 92 68 00 	sts	0x0068, r1
			servo_expand(); 
     490:	0e 94 8a 00 	call	0x114	; 0x114 <servo_expand>
			PORTA = 0xFF; 
     494:	8b e3       	ldi	r24, 0x3B	; 59
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	2f ef       	ldi	r18, 0xFF	; 255
     49a:	fc 01       	movw	r30, r24
     49c:	20 83       	st	Z, r18
			break;
     49e:	17 c0       	rjmp	.+46     	; 0x4ce <__stack+0x6f>
        //compress key
		case 12:  
			isKeyReleased = 0;
     4a0:	10 92 69 00 	sts	0x0069, r1
     4a4:	10 92 68 00 	sts	0x0068, r1
			servo_compress();
     4a8:	0e 94 3d 01 	call	0x27a	; 0x27a <servo_compress>
			PORTA = 0xFF;
     4ac:	8b e3       	ldi	r24, 0x3B	; 59
     4ae:	90 e0       	ldi	r25, 0x00	; 0
     4b0:	2f ef       	ldi	r18, 0xFF	; 255
     4b2:	fc 01       	movw	r30, r24
     4b4:	20 83       	st	Z, r18
		    break;
     4b6:	0b c0       	rjmp	.+22     	; 0x4ce <__stack+0x6f>
		//key released
		case 0:
			keyReleased();
     4b8:	0e 94 79 00 	call	0xf2	; 0xf2 <keyReleased>
			PORTA = 0x00;
     4bc:	8b e3       	ldi	r24, 0x3B	; 59
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	fc 01       	movw	r30, r24
     4c2:	10 82       	st	Z, r1
			break;
     4c4:	04 c0       	rjmp	.+8      	; 0x4ce <__stack+0x6f>
		//others
		default:   
			PORTA = 0x00;
     4c6:	8b e3       	ldi	r24, 0x3B	; 59
     4c8:	90 e0       	ldi	r25, 0x00	; 0
     4ca:	fc 01       	movw	r30, r24
     4cc:	10 82       	st	Z, r1
	}
}
     4ce:	0f 90       	pop	r0
     4d0:	cf 91       	pop	r28
     4d2:	df 91       	pop	r29
     4d4:	ff 91       	pop	r31
     4d6:	ef 91       	pop	r30
     4d8:	bf 91       	pop	r27
     4da:	af 91       	pop	r26
     4dc:	9f 91       	pop	r25
     4de:	8f 91       	pop	r24
     4e0:	7f 91       	pop	r23
     4e2:	6f 91       	pop	r22
     4e4:	5f 91       	pop	r21
     4e6:	4f 91       	pop	r20
     4e8:	3f 91       	pop	r19
     4ea:	2f 91       	pop	r18
     4ec:	0f 90       	pop	r0
     4ee:	0f be       	out	0x3f, r0	; 63
     4f0:	0f 90       	pop	r0
     4f2:	1f 90       	pop	r1
     4f4:	18 95       	reti

000004f6 <main>:

 
int main(void)
{
     4f6:	df 93       	push	r29
     4f8:	cf 93       	push	r28
     4fa:	cd b7       	in	r28, 0x3d	; 61
     4fc:	de b7       	in	r29, 0x3e	; 62
	//I/O Initialization
    DDRA = 0xFF;
     4fe:	8a e3       	ldi	r24, 0x3A	; 58
     500:	90 e0       	ldi	r25, 0x00	; 0
     502:	2f ef       	ldi	r18, 0xFF	; 255
     504:	fc 01       	movw	r30, r24
     506:	20 83       	st	Z, r18
	DDRB = 0xFF;
     508:	87 e3       	ldi	r24, 0x37	; 55
     50a:	90 e0       	ldi	r25, 0x00	; 0
     50c:	2f ef       	ldi	r18, 0xFF	; 255
     50e:	fc 01       	movw	r30, r24
     510:	20 83       	st	Z, r18
	
	PORTA = 0;
     512:	8b e3       	ldi	r24, 0x3B	; 59
     514:	90 e0       	ldi	r25, 0x00	; 0
     516:	fc 01       	movw	r30, r24
     518:	10 82       	st	Z, r1
    PORTB = 0;
     51a:	88 e3       	ldi	r24, 0x38	; 56
     51c:	90 e0       	ldi	r25, 0x00	; 0
     51e:	fc 01       	movw	r30, r24
     520:	10 82       	st	Z, r1
 
    //UART initialization
    UCSRB |= (1 << RXEN) | (1 << TXEN); //enable Tx and Rx
     522:	8a e2       	ldi	r24, 0x2A	; 42
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	2a e2       	ldi	r18, 0x2A	; 42
     528:	30 e0       	ldi	r19, 0x00	; 0
     52a:	f9 01       	movw	r30, r18
     52c:	20 81       	ld	r18, Z
     52e:	28 61       	ori	r18, 0x18	; 24
     530:	fc 01       	movw	r30, r24
     532:	20 83       	st	Z, r18
    UCSRC |= (1 << UCSZ0) | (1 << UCSZ1); //set size to 8 bits
     534:	80 e4       	ldi	r24, 0x40	; 64
     536:	90 e0       	ldi	r25, 0x00	; 0
     538:	20 e4       	ldi	r18, 0x40	; 64
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	f9 01       	movw	r30, r18
     53e:	20 81       	ld	r18, Z
     540:	26 60       	ori	r18, 0x06	; 6
     542:	fc 01       	movw	r30, r24
     544:	20 83       	st	Z, r18
    UBRRL = BAUD_PRESCALE;        
     546:	89 e2       	ldi	r24, 0x29	; 41
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	23 e0       	ldi	r18, 0x03	; 3
     54c:	fc 01       	movw	r30, r24
     54e:	20 83       	st	Z, r18
    UBRRH = (BAUD_PRESCALE >> 8); //set baudrate registers
     550:	80 e4       	ldi	r24, 0x40	; 64
     552:	90 e0       	ldi	r25, 0x00	; 0
     554:	fc 01       	movw	r30, r24
     556:	10 82       	st	Z, r1
	UCSRB |= (1 << RXCIE); //enable USART-interrupt
     558:	8a e2       	ldi	r24, 0x2A	; 42
     55a:	90 e0       	ldi	r25, 0x00	; 0
     55c:	2a e2       	ldi	r18, 0x2A	; 42
     55e:	30 e0       	ldi	r19, 0x00	; 0
     560:	f9 01       	movw	r30, r18
     562:	20 81       	ld	r18, Z
     564:	20 68       	ori	r18, 0x80	; 128
     566:	fc 01       	movw	r30, r24
     568:	20 83       	st	Z, r18
	
	//PWM initialization	
	DDRD = 0xFF; // OC1A output
     56a:	81 e3       	ldi	r24, 0x31	; 49
     56c:	90 e0       	ldi	r25, 0x00	; 0
     56e:	2f ef       	ldi	r18, 0xFF	; 255
     570:	fc 01       	movw	r30, r24
     572:	20 83       	st	Z, r18
	TCCR1A |= (1<<WGM11) | (1<<COM1A1); // clear OC1A on compare
     574:	8f e4       	ldi	r24, 0x4F	; 79
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	2f e4       	ldi	r18, 0x4F	; 79
     57a:	30 e0       	ldi	r19, 0x00	; 0
     57c:	f9 01       	movw	r30, r18
     57e:	20 81       	ld	r18, Z
     580:	22 68       	ori	r18, 0x82	; 130
     582:	fc 01       	movw	r30, r24
     584:	20 83       	st	Z, r18
	TCCR1B |= (1<<WGM12) | (1<<WGM13); // fast pwm, mode 14
     586:	8e e4       	ldi	r24, 0x4E	; 78
     588:	90 e0       	ldi	r25, 0x00	; 0
     58a:	2e e4       	ldi	r18, 0x4E	; 78
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	f9 01       	movw	r30, r18
     590:	20 81       	ld	r18, Z
     592:	28 61       	ori	r18, 0x18	; 24
     594:	fc 01       	movw	r30, r24
     596:	20 83       	st	Z, r18
	TCCR1B |= (1<<CS10); // prescale=8, step=1us
     598:	8e e4       	ldi	r24, 0x4E	; 78
     59a:	90 e0       	ldi	r25, 0x00	; 0
     59c:	2e e4       	ldi	r18, 0x4E	; 78
     59e:	30 e0       	ldi	r19, 0x00	; 0
     5a0:	f9 01       	movw	r30, r18
     5a2:	20 81       	ld	r18, Z
     5a4:	21 60       	ori	r18, 0x01	; 1
     5a6:	fc 01       	movw	r30, r24
     5a8:	20 83       	st	Z, r18
	ICR1 = 20000; // 50 Hz
     5aa:	86 e4       	ldi	r24, 0x46	; 70
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	20 e2       	ldi	r18, 0x20	; 32
     5b0:	3e e4       	ldi	r19, 0x4E	; 78
     5b2:	fc 01       	movw	r30, r24
     5b4:	31 83       	std	Z+1, r19	; 0x01
     5b6:	20 83       	st	Z, r18
	
	//set initial OCR1A value
	OCR1A = 2350;
     5b8:	8a e4       	ldi	r24, 0x4A	; 74
     5ba:	90 e0       	ldi	r25, 0x00	; 0
     5bc:	2e e2       	ldi	r18, 0x2E	; 46
     5be:	39 e0       	ldi	r19, 0x09	; 9
     5c0:	fc 01       	movw	r30, r24
     5c2:	31 83       	std	Z+1, r19	; 0x01
     5c4:	20 83       	st	Z, r18
	
	sei(); //Enable global interrupt
     5c6:	78 94       	sei
 
    while(1) //infinite loop
	{
		//do nothing
    }	
     5c8:	ff cf       	rjmp	.-2      	; 0x5c8 <main+0xd2>

000005ca <__fixunssfsi>:
     5ca:	ef 92       	push	r14
     5cc:	ff 92       	push	r15
     5ce:	0f 93       	push	r16
     5d0:	1f 93       	push	r17
     5d2:	7b 01       	movw	r14, r22
     5d4:	8c 01       	movw	r16, r24
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	30 e0       	ldi	r19, 0x00	; 0
     5da:	40 e0       	ldi	r20, 0x00	; 0
     5dc:	5f e4       	ldi	r21, 0x4F	; 79
     5de:	0e 94 e3 05 	call	0xbc6	; 0xbc6 <__gesf2>
     5e2:	87 fd       	sbrc	r24, 7
     5e4:	11 c0       	rjmp	.+34     	; 0x608 <__fixunssfsi+0x3e>
     5e6:	c8 01       	movw	r24, r16
     5e8:	b7 01       	movw	r22, r14
     5ea:	20 e0       	ldi	r18, 0x00	; 0
     5ec:	30 e0       	ldi	r19, 0x00	; 0
     5ee:	40 e0       	ldi	r20, 0x00	; 0
     5f0:	5f e4       	ldi	r21, 0x4F	; 79
     5f2:	0e 94 88 04 	call	0x910	; 0x910 <__subsf3>
     5f6:	0e 94 43 06 	call	0xc86	; 0xc86 <__fixsfsi>
     5fa:	9b 01       	movw	r18, r22
     5fc:	ac 01       	movw	r20, r24
     5fe:	20 50       	subi	r18, 0x00	; 0
     600:	30 40       	sbci	r19, 0x00	; 0
     602:	40 40       	sbci	r20, 0x00	; 0
     604:	50 48       	sbci	r21, 0x80	; 128
     606:	06 c0       	rjmp	.+12     	; 0x614 <__fixunssfsi+0x4a>
     608:	c8 01       	movw	r24, r16
     60a:	b7 01       	movw	r22, r14
     60c:	0e 94 43 06 	call	0xc86	; 0xc86 <__fixsfsi>
     610:	9b 01       	movw	r18, r22
     612:	ac 01       	movw	r20, r24
     614:	b9 01       	movw	r22, r18
     616:	ca 01       	movw	r24, r20
     618:	1f 91       	pop	r17
     61a:	0f 91       	pop	r16
     61c:	ff 90       	pop	r15
     61e:	ef 90       	pop	r14
     620:	08 95       	ret

00000622 <_fpadd_parts>:
     622:	a0 e0       	ldi	r26, 0x00	; 0
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 29 08 	jmp	0x1052	; 0x1052 <__prologue_saves__+0x8>
     62e:	fc 01       	movw	r30, r24
     630:	ea 01       	movw	r28, r20
     632:	80 81       	ld	r24, Z
     634:	82 30       	cpi	r24, 0x02	; 2
     636:	08 f4       	brcc	.+2      	; 0x63a <_fpadd_parts+0x18>
     638:	38 c1       	rjmp	.+624    	; 0x8aa <_fpadd_parts+0x288>
     63a:	db 01       	movw	r26, r22
     63c:	9c 91       	ld	r25, X
     63e:	92 30       	cpi	r25, 0x02	; 2
     640:	08 f4       	brcc	.+2      	; 0x644 <_fpadd_parts+0x22>
     642:	30 c1       	rjmp	.+608    	; 0x8a4 <_fpadd_parts+0x282>
     644:	84 30       	cpi	r24, 0x04	; 4
     646:	59 f4       	brne	.+22     	; 0x65e <_fpadd_parts+0x3c>
     648:	94 30       	cpi	r25, 0x04	; 4
     64a:	09 f0       	breq	.+2      	; 0x64e <_fpadd_parts+0x2c>
     64c:	2e c1       	rjmp	.+604    	; 0x8aa <_fpadd_parts+0x288>
     64e:	91 81       	ldd	r25, Z+1	; 0x01
     650:	11 96       	adiw	r26, 0x01	; 1
     652:	8c 91       	ld	r24, X
     654:	11 97       	sbiw	r26, 0x01	; 1
     656:	98 17       	cp	r25, r24
     658:	09 f0       	breq	.+2      	; 0x65c <_fpadd_parts+0x3a>
     65a:	21 c1       	rjmp	.+578    	; 0x89e <_fpadd_parts+0x27c>
     65c:	26 c1       	rjmp	.+588    	; 0x8aa <_fpadd_parts+0x288>
     65e:	94 30       	cpi	r25, 0x04	; 4
     660:	09 f4       	brne	.+2      	; 0x664 <_fpadd_parts+0x42>
     662:	20 c1       	rjmp	.+576    	; 0x8a4 <_fpadd_parts+0x282>
     664:	92 30       	cpi	r25, 0x02	; 2
     666:	b1 f4       	brne	.+44     	; 0x694 <_fpadd_parts+0x72>
     668:	82 30       	cpi	r24, 0x02	; 2
     66a:	09 f0       	breq	.+2      	; 0x66e <_fpadd_parts+0x4c>
     66c:	1e c1       	rjmp	.+572    	; 0x8aa <_fpadd_parts+0x288>
     66e:	ca 01       	movw	r24, r20
     670:	af 01       	movw	r20, r30
     672:	28 e0       	ldi	r18, 0x08	; 8
     674:	da 01       	movw	r26, r20
     676:	0d 90       	ld	r0, X+
     678:	ad 01       	movw	r20, r26
     67a:	dc 01       	movw	r26, r24
     67c:	0d 92       	st	X+, r0
     67e:	cd 01       	movw	r24, r26
     680:	21 50       	subi	r18, 0x01	; 1
     682:	c1 f7       	brne	.-16     	; 0x674 <_fpadd_parts+0x52>
     684:	db 01       	movw	r26, r22
     686:	11 96       	adiw	r26, 0x01	; 1
     688:	8c 91       	ld	r24, X
     68a:	11 97       	sbiw	r26, 0x01	; 1
     68c:	91 81       	ldd	r25, Z+1	; 0x01
     68e:	89 23       	and	r24, r25
     690:	89 83       	std	Y+1, r24	; 0x01
     692:	0a c1       	rjmp	.+532    	; 0x8a8 <_fpadd_parts+0x286>
     694:	82 30       	cpi	r24, 0x02	; 2
     696:	09 f4       	brne	.+2      	; 0x69a <_fpadd_parts+0x78>
     698:	05 c1       	rjmp	.+522    	; 0x8a4 <_fpadd_parts+0x282>
     69a:	c2 80       	ldd	r12, Z+2	; 0x02
     69c:	d3 80       	ldd	r13, Z+3	; 0x03
     69e:	db 01       	movw	r26, r22
     6a0:	12 96       	adiw	r26, 0x02	; 2
     6a2:	6d 90       	ld	r6, X+
     6a4:	7c 90       	ld	r7, X
     6a6:	13 97       	sbiw	r26, 0x03	; 3
     6a8:	24 81       	ldd	r18, Z+4	; 0x04
     6aa:	35 81       	ldd	r19, Z+5	; 0x05
     6ac:	46 81       	ldd	r20, Z+6	; 0x06
     6ae:	57 81       	ldd	r21, Z+7	; 0x07
     6b0:	14 96       	adiw	r26, 0x04	; 4
     6b2:	ed 90       	ld	r14, X+
     6b4:	fd 90       	ld	r15, X+
     6b6:	0d 91       	ld	r16, X+
     6b8:	1c 91       	ld	r17, X
     6ba:	17 97       	sbiw	r26, 0x07	; 7
     6bc:	c6 01       	movw	r24, r12
     6be:	86 19       	sub	r24, r6
     6c0:	97 09       	sbc	r25, r7
     6c2:	5c 01       	movw	r10, r24
     6c4:	97 ff       	sbrs	r25, 7
     6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <_fpadd_parts+0xae>
     6c8:	aa 24       	eor	r10, r10
     6ca:	bb 24       	eor	r11, r11
     6cc:	a8 1a       	sub	r10, r24
     6ce:	b9 0a       	sbc	r11, r25
     6d0:	b0 e2       	ldi	r27, 0x20	; 32
     6d2:	ab 16       	cp	r10, r27
     6d4:	b1 04       	cpc	r11, r1
     6d6:	0c f0       	brlt	.+2      	; 0x6da <_fpadd_parts+0xb8>
     6d8:	61 c0       	rjmp	.+194    	; 0x79c <_fpadd_parts+0x17a>
     6da:	18 16       	cp	r1, r24
     6dc:	19 06       	cpc	r1, r25
     6de:	6c f5       	brge	.+90     	; 0x73a <_fpadd_parts+0x118>
     6e0:	37 01       	movw	r6, r14
     6e2:	48 01       	movw	r8, r16
     6e4:	0a 2c       	mov	r0, r10
     6e6:	04 c0       	rjmp	.+8      	; 0x6f0 <_fpadd_parts+0xce>
     6e8:	96 94       	lsr	r9
     6ea:	87 94       	ror	r8
     6ec:	77 94       	ror	r7
     6ee:	67 94       	ror	r6
     6f0:	0a 94       	dec	r0
     6f2:	d2 f7       	brpl	.-12     	; 0x6e8 <_fpadd_parts+0xc6>
     6f4:	81 e0       	ldi	r24, 0x01	; 1
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	a0 e0       	ldi	r26, 0x00	; 0
     6fa:	b0 e0       	ldi	r27, 0x00	; 0
     6fc:	0a 2c       	mov	r0, r10
     6fe:	04 c0       	rjmp	.+8      	; 0x708 <_fpadd_parts+0xe6>
     700:	88 0f       	add	r24, r24
     702:	99 1f       	adc	r25, r25
     704:	aa 1f       	adc	r26, r26
     706:	bb 1f       	adc	r27, r27
     708:	0a 94       	dec	r0
     70a:	d2 f7       	brpl	.-12     	; 0x700 <_fpadd_parts+0xde>
     70c:	01 97       	sbiw	r24, 0x01	; 1
     70e:	a1 09       	sbc	r26, r1
     710:	b1 09       	sbc	r27, r1
     712:	8e 21       	and	r24, r14
     714:	9f 21       	and	r25, r15
     716:	a0 23       	and	r26, r16
     718:	b1 23       	and	r27, r17
     71a:	ee 24       	eor	r14, r14
     71c:	ff 24       	eor	r15, r15
     71e:	87 01       	movw	r16, r14
     720:	e3 94       	inc	r14
     722:	00 97       	sbiw	r24, 0x00	; 0
     724:	a1 05       	cpc	r26, r1
     726:	b1 05       	cpc	r27, r1
     728:	19 f4       	brne	.+6      	; 0x730 <_fpadd_parts+0x10e>
     72a:	ee 24       	eor	r14, r14
     72c:	ff 24       	eor	r15, r15
     72e:	87 01       	movw	r16, r14
     730:	e6 28       	or	r14, r6
     732:	f7 28       	or	r15, r7
     734:	08 29       	or	r16, r8
     736:	19 29       	or	r17, r9
     738:	3c c0       	rjmp	.+120    	; 0x7b2 <_fpadd_parts+0x190>
     73a:	00 97       	sbiw	r24, 0x00	; 0
     73c:	d1 f1       	breq	.+116    	; 0x7b2 <_fpadd_parts+0x190>
     73e:	ca 0c       	add	r12, r10
     740:	db 1c       	adc	r13, r11
     742:	39 01       	movw	r6, r18
     744:	4a 01       	movw	r8, r20
     746:	0a 2c       	mov	r0, r10
     748:	04 c0       	rjmp	.+8      	; 0x752 <_fpadd_parts+0x130>
     74a:	96 94       	lsr	r9
     74c:	87 94       	ror	r8
     74e:	77 94       	ror	r7
     750:	67 94       	ror	r6
     752:	0a 94       	dec	r0
     754:	d2 f7       	brpl	.-12     	; 0x74a <_fpadd_parts+0x128>
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	a0 e0       	ldi	r26, 0x00	; 0
     75c:	b0 e0       	ldi	r27, 0x00	; 0
     75e:	0a 2c       	mov	r0, r10
     760:	04 c0       	rjmp	.+8      	; 0x76a <_fpadd_parts+0x148>
     762:	88 0f       	add	r24, r24
     764:	99 1f       	adc	r25, r25
     766:	aa 1f       	adc	r26, r26
     768:	bb 1f       	adc	r27, r27
     76a:	0a 94       	dec	r0
     76c:	d2 f7       	brpl	.-12     	; 0x762 <_fpadd_parts+0x140>
     76e:	01 97       	sbiw	r24, 0x01	; 1
     770:	a1 09       	sbc	r26, r1
     772:	b1 09       	sbc	r27, r1
     774:	82 23       	and	r24, r18
     776:	93 23       	and	r25, r19
     778:	a4 23       	and	r26, r20
     77a:	b5 23       	and	r27, r21
     77c:	21 e0       	ldi	r18, 0x01	; 1
     77e:	30 e0       	ldi	r19, 0x00	; 0
     780:	40 e0       	ldi	r20, 0x00	; 0
     782:	50 e0       	ldi	r21, 0x00	; 0
     784:	00 97       	sbiw	r24, 0x00	; 0
     786:	a1 05       	cpc	r26, r1
     788:	b1 05       	cpc	r27, r1
     78a:	19 f4       	brne	.+6      	; 0x792 <_fpadd_parts+0x170>
     78c:	20 e0       	ldi	r18, 0x00	; 0
     78e:	30 e0       	ldi	r19, 0x00	; 0
     790:	a9 01       	movw	r20, r18
     792:	26 29       	or	r18, r6
     794:	37 29       	or	r19, r7
     796:	48 29       	or	r20, r8
     798:	59 29       	or	r21, r9
     79a:	0b c0       	rjmp	.+22     	; 0x7b2 <_fpadd_parts+0x190>
     79c:	6c 14       	cp	r6, r12
     79e:	7d 04       	cpc	r7, r13
     7a0:	24 f4       	brge	.+8      	; 0x7aa <_fpadd_parts+0x188>
     7a2:	ee 24       	eor	r14, r14
     7a4:	ff 24       	eor	r15, r15
     7a6:	87 01       	movw	r16, r14
     7a8:	04 c0       	rjmp	.+8      	; 0x7b2 <_fpadd_parts+0x190>
     7aa:	63 01       	movw	r12, r6
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	a9 01       	movw	r20, r18
     7b2:	81 81       	ldd	r24, Z+1	; 0x01
     7b4:	fb 01       	movw	r30, r22
     7b6:	91 81       	ldd	r25, Z+1	; 0x01
     7b8:	89 17       	cp	r24, r25
     7ba:	09 f4       	brne	.+2      	; 0x7be <_fpadd_parts+0x19c>
     7bc:	45 c0       	rjmp	.+138    	; 0x848 <_fpadd_parts+0x226>
     7be:	88 23       	and	r24, r24
     7c0:	49 f0       	breq	.+18     	; 0x7d4 <_fpadd_parts+0x1b2>
     7c2:	d8 01       	movw	r26, r16
     7c4:	c7 01       	movw	r24, r14
     7c6:	82 1b       	sub	r24, r18
     7c8:	93 0b       	sbc	r25, r19
     7ca:	a4 0b       	sbc	r26, r20
     7cc:	b5 0b       	sbc	r27, r21
     7ce:	9c 01       	movw	r18, r24
     7d0:	ad 01       	movw	r20, r26
     7d2:	04 c0       	rjmp	.+8      	; 0x7dc <_fpadd_parts+0x1ba>
     7d4:	2e 19       	sub	r18, r14
     7d6:	3f 09       	sbc	r19, r15
     7d8:	40 0b       	sbc	r20, r16
     7da:	51 0b       	sbc	r21, r17
     7dc:	57 fd       	sbrc	r21, 7
     7de:	04 c0       	rjmp	.+8      	; 0x7e8 <_fpadd_parts+0x1c6>
     7e0:	19 82       	std	Y+1, r1	; 0x01
     7e2:	db 82       	std	Y+3, r13	; 0x03
     7e4:	ca 82       	std	Y+2, r12	; 0x02
     7e6:	0b c0       	rjmp	.+22     	; 0x7fe <_fpadd_parts+0x1dc>
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	89 83       	std	Y+1, r24	; 0x01
     7ec:	db 82       	std	Y+3, r13	; 0x03
     7ee:	ca 82       	std	Y+2, r12	; 0x02
     7f0:	50 95       	com	r21
     7f2:	40 95       	com	r20
     7f4:	30 95       	com	r19
     7f6:	21 95       	neg	r18
     7f8:	3f 4f       	sbci	r19, 0xFF	; 255
     7fa:	4f 4f       	sbci	r20, 0xFF	; 255
     7fc:	5f 4f       	sbci	r21, 0xFF	; 255
     7fe:	2c 83       	std	Y+4, r18	; 0x04
     800:	3d 83       	std	Y+5, r19	; 0x05
     802:	4e 83       	std	Y+6, r20	; 0x06
     804:	5f 83       	std	Y+7, r21	; 0x07
     806:	0d c0       	rjmp	.+26     	; 0x822 <_fpadd_parts+0x200>
     808:	88 0f       	add	r24, r24
     80a:	99 1f       	adc	r25, r25
     80c:	aa 1f       	adc	r26, r26
     80e:	bb 1f       	adc	r27, r27
     810:	8c 83       	std	Y+4, r24	; 0x04
     812:	9d 83       	std	Y+5, r25	; 0x05
     814:	ae 83       	std	Y+6, r26	; 0x06
     816:	bf 83       	std	Y+7, r27	; 0x07
     818:	8a 81       	ldd	r24, Y+2	; 0x02
     81a:	9b 81       	ldd	r25, Y+3	; 0x03
     81c:	01 97       	sbiw	r24, 0x01	; 1
     81e:	9b 83       	std	Y+3, r25	; 0x03
     820:	8a 83       	std	Y+2, r24	; 0x02
     822:	8c 81       	ldd	r24, Y+4	; 0x04
     824:	9d 81       	ldd	r25, Y+5	; 0x05
     826:	ae 81       	ldd	r26, Y+6	; 0x06
     828:	bf 81       	ldd	r27, Y+7	; 0x07
     82a:	9c 01       	movw	r18, r24
     82c:	ad 01       	movw	r20, r26
     82e:	21 50       	subi	r18, 0x01	; 1
     830:	30 40       	sbci	r19, 0x00	; 0
     832:	40 40       	sbci	r20, 0x00	; 0
     834:	50 40       	sbci	r21, 0x00	; 0
     836:	2f 3f       	cpi	r18, 0xFF	; 255
     838:	ef ef       	ldi	r30, 0xFF	; 255
     83a:	3e 07       	cpc	r19, r30
     83c:	ef ef       	ldi	r30, 0xFF	; 255
     83e:	4e 07       	cpc	r20, r30
     840:	ef e3       	ldi	r30, 0x3F	; 63
     842:	5e 07       	cpc	r21, r30
     844:	08 f3       	brcs	.-62     	; 0x808 <_fpadd_parts+0x1e6>
     846:	0b c0       	rjmp	.+22     	; 0x85e <_fpadd_parts+0x23c>
     848:	89 83       	std	Y+1, r24	; 0x01
     84a:	db 82       	std	Y+3, r13	; 0x03
     84c:	ca 82       	std	Y+2, r12	; 0x02
     84e:	2e 0d       	add	r18, r14
     850:	3f 1d       	adc	r19, r15
     852:	40 1f       	adc	r20, r16
     854:	51 1f       	adc	r21, r17
     856:	2c 83       	std	Y+4, r18	; 0x04
     858:	3d 83       	std	Y+5, r19	; 0x05
     85a:	4e 83       	std	Y+6, r20	; 0x06
     85c:	5f 83       	std	Y+7, r21	; 0x07
     85e:	83 e0       	ldi	r24, 0x03	; 3
     860:	88 83       	st	Y, r24
     862:	2c 81       	ldd	r18, Y+4	; 0x04
     864:	3d 81       	ldd	r19, Y+5	; 0x05
     866:	4e 81       	ldd	r20, Y+6	; 0x06
     868:	5f 81       	ldd	r21, Y+7	; 0x07
     86a:	57 ff       	sbrs	r21, 7
     86c:	1d c0       	rjmp	.+58     	; 0x8a8 <_fpadd_parts+0x286>
     86e:	da 01       	movw	r26, r20
     870:	c9 01       	movw	r24, r18
     872:	81 70       	andi	r24, 0x01	; 1
     874:	90 70       	andi	r25, 0x00	; 0
     876:	a0 70       	andi	r26, 0x00	; 0
     878:	b0 70       	andi	r27, 0x00	; 0
     87a:	56 95       	lsr	r21
     87c:	47 95       	ror	r20
     87e:	37 95       	ror	r19
     880:	27 95       	ror	r18
     882:	82 2b       	or	r24, r18
     884:	93 2b       	or	r25, r19
     886:	a4 2b       	or	r26, r20
     888:	b5 2b       	or	r27, r21
     88a:	8c 83       	std	Y+4, r24	; 0x04
     88c:	9d 83       	std	Y+5, r25	; 0x05
     88e:	ae 83       	std	Y+6, r26	; 0x06
     890:	bf 83       	std	Y+7, r27	; 0x07
     892:	8a 81       	ldd	r24, Y+2	; 0x02
     894:	9b 81       	ldd	r25, Y+3	; 0x03
     896:	01 96       	adiw	r24, 0x01	; 1
     898:	9b 83       	std	Y+3, r25	; 0x03
     89a:	8a 83       	std	Y+2, r24	; 0x02
     89c:	05 c0       	rjmp	.+10     	; 0x8a8 <_fpadd_parts+0x286>
     89e:	e0 e6       	ldi	r30, 0x60	; 96
     8a0:	f0 e0       	ldi	r31, 0x00	; 0
     8a2:	03 c0       	rjmp	.+6      	; 0x8aa <_fpadd_parts+0x288>
     8a4:	fb 01       	movw	r30, r22
     8a6:	01 c0       	rjmp	.+2      	; 0x8aa <_fpadd_parts+0x288>
     8a8:	fe 01       	movw	r30, r28
     8aa:	cf 01       	movw	r24, r30
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62
     8b0:	ee e0       	ldi	r30, 0x0E	; 14
     8b2:	0c 94 45 08 	jmp	0x108a	; 0x108a <__epilogue_restores__+0x8>

000008b6 <__addsf3>:
     8b6:	a0 e2       	ldi	r26, 0x20	; 32
     8b8:	b0 e0       	ldi	r27, 0x00	; 0
     8ba:	e1 e6       	ldi	r30, 0x61	; 97
     8bc:	f4 e0       	ldi	r31, 0x04	; 4
     8be:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__prologue_saves__+0x18>
     8c2:	69 83       	std	Y+1, r22	; 0x01
     8c4:	7a 83       	std	Y+2, r23	; 0x02
     8c6:	8b 83       	std	Y+3, r24	; 0x03
     8c8:	9c 83       	std	Y+4, r25	; 0x04
     8ca:	2d 83       	std	Y+5, r18	; 0x05
     8cc:	3e 83       	std	Y+6, r19	; 0x06
     8ce:	4f 83       	std	Y+7, r20	; 0x07
     8d0:	58 87       	std	Y+8, r21	; 0x08
     8d2:	89 e0       	ldi	r24, 0x09	; 9
     8d4:	e8 2e       	mov	r14, r24
     8d6:	f1 2c       	mov	r15, r1
     8d8:	ec 0e       	add	r14, r28
     8da:	fd 1e       	adc	r15, r29
     8dc:	ce 01       	movw	r24, r28
     8de:	01 96       	adiw	r24, 0x01	; 1
     8e0:	b7 01       	movw	r22, r14
     8e2:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     8e6:	8e 01       	movw	r16, r28
     8e8:	0f 5e       	subi	r16, 0xEF	; 239
     8ea:	1f 4f       	sbci	r17, 0xFF	; 255
     8ec:	ce 01       	movw	r24, r28
     8ee:	05 96       	adiw	r24, 0x05	; 5
     8f0:	b8 01       	movw	r22, r16
     8f2:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     8f6:	c7 01       	movw	r24, r14
     8f8:	b8 01       	movw	r22, r16
     8fa:	ae 01       	movw	r20, r28
     8fc:	47 5e       	subi	r20, 0xE7	; 231
     8fe:	5f 4f       	sbci	r21, 0xFF	; 255
     900:	0e 94 11 03 	call	0x622	; 0x622 <_fpadd_parts>
     904:	0e 94 95 06 	call	0xd2a	; 0xd2a <__pack_f>
     908:	a0 96       	adiw	r28, 0x20	; 32
     90a:	e6 e0       	ldi	r30, 0x06	; 6
     90c:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x18>

00000910 <__subsf3>:
     910:	a0 e2       	ldi	r26, 0x20	; 32
     912:	b0 e0       	ldi	r27, 0x00	; 0
     914:	ee e8       	ldi	r30, 0x8E	; 142
     916:	f4 e0       	ldi	r31, 0x04	; 4
     918:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__prologue_saves__+0x18>
     91c:	69 83       	std	Y+1, r22	; 0x01
     91e:	7a 83       	std	Y+2, r23	; 0x02
     920:	8b 83       	std	Y+3, r24	; 0x03
     922:	9c 83       	std	Y+4, r25	; 0x04
     924:	2d 83       	std	Y+5, r18	; 0x05
     926:	3e 83       	std	Y+6, r19	; 0x06
     928:	4f 83       	std	Y+7, r20	; 0x07
     92a:	58 87       	std	Y+8, r21	; 0x08
     92c:	8e 01       	movw	r16, r28
     92e:	07 5f       	subi	r16, 0xF7	; 247
     930:	1f 4f       	sbci	r17, 0xFF	; 255
     932:	ce 01       	movw	r24, r28
     934:	01 96       	adiw	r24, 0x01	; 1
     936:	b8 01       	movw	r22, r16
     938:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     93c:	91 e1       	ldi	r25, 0x11	; 17
     93e:	e9 2e       	mov	r14, r25
     940:	f1 2c       	mov	r15, r1
     942:	ec 0e       	add	r14, r28
     944:	fd 1e       	adc	r15, r29
     946:	ce 01       	movw	r24, r28
     948:	05 96       	adiw	r24, 0x05	; 5
     94a:	b7 01       	movw	r22, r14
     94c:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     950:	8a 89       	ldd	r24, Y+18	; 0x12
     952:	91 e0       	ldi	r25, 0x01	; 1
     954:	89 27       	eor	r24, r25
     956:	8a 8b       	std	Y+18, r24	; 0x12
     958:	c8 01       	movw	r24, r16
     95a:	b7 01       	movw	r22, r14
     95c:	ae 01       	movw	r20, r28
     95e:	47 5e       	subi	r20, 0xE7	; 231
     960:	5f 4f       	sbci	r21, 0xFF	; 255
     962:	0e 94 11 03 	call	0x622	; 0x622 <_fpadd_parts>
     966:	0e 94 95 06 	call	0xd2a	; 0xd2a <__pack_f>
     96a:	a0 96       	adiw	r28, 0x20	; 32
     96c:	e6 e0       	ldi	r30, 0x06	; 6
     96e:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x18>

00000972 <__mulsf3>:
     972:	a0 e2       	ldi	r26, 0x20	; 32
     974:	b0 e0       	ldi	r27, 0x00	; 0
     976:	ef eb       	ldi	r30, 0xBF	; 191
     978:	f4 e0       	ldi	r31, 0x04	; 4
     97a:	0c 94 25 08 	jmp	0x104a	; 0x104a <__prologue_saves__>
     97e:	69 83       	std	Y+1, r22	; 0x01
     980:	7a 83       	std	Y+2, r23	; 0x02
     982:	8b 83       	std	Y+3, r24	; 0x03
     984:	9c 83       	std	Y+4, r25	; 0x04
     986:	2d 83       	std	Y+5, r18	; 0x05
     988:	3e 83       	std	Y+6, r19	; 0x06
     98a:	4f 83       	std	Y+7, r20	; 0x07
     98c:	58 87       	std	Y+8, r21	; 0x08
     98e:	ce 01       	movw	r24, r28
     990:	01 96       	adiw	r24, 0x01	; 1
     992:	be 01       	movw	r22, r28
     994:	67 5f       	subi	r22, 0xF7	; 247
     996:	7f 4f       	sbci	r23, 0xFF	; 255
     998:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     99c:	ce 01       	movw	r24, r28
     99e:	05 96       	adiw	r24, 0x05	; 5
     9a0:	be 01       	movw	r22, r28
     9a2:	6f 5e       	subi	r22, 0xEF	; 239
     9a4:	7f 4f       	sbci	r23, 0xFF	; 255
     9a6:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     9aa:	99 85       	ldd	r25, Y+9	; 0x09
     9ac:	92 30       	cpi	r25, 0x02	; 2
     9ae:	78 f0       	brcs	.+30     	; 0x9ce <__mulsf3+0x5c>
     9b0:	89 89       	ldd	r24, Y+17	; 0x11
     9b2:	82 30       	cpi	r24, 0x02	; 2
     9b4:	c0 f0       	brcs	.+48     	; 0x9e6 <__mulsf3+0x74>
     9b6:	94 30       	cpi	r25, 0x04	; 4
     9b8:	19 f4       	brne	.+6      	; 0x9c0 <__mulsf3+0x4e>
     9ba:	82 30       	cpi	r24, 0x02	; 2
     9bc:	41 f4       	brne	.+16     	; 0x9ce <__mulsf3+0x5c>
     9be:	cb c0       	rjmp	.+406    	; 0xb56 <__mulsf3+0x1e4>
     9c0:	84 30       	cpi	r24, 0x04	; 4
     9c2:	19 f4       	brne	.+6      	; 0x9ca <__mulsf3+0x58>
     9c4:	92 30       	cpi	r25, 0x02	; 2
     9c6:	79 f4       	brne	.+30     	; 0x9e6 <__mulsf3+0x74>
     9c8:	c6 c0       	rjmp	.+396    	; 0xb56 <__mulsf3+0x1e4>
     9ca:	92 30       	cpi	r25, 0x02	; 2
     9cc:	51 f4       	brne	.+20     	; 0x9e2 <__mulsf3+0x70>
     9ce:	81 e0       	ldi	r24, 0x01	; 1
     9d0:	2a 85       	ldd	r18, Y+10	; 0x0a
     9d2:	9a 89       	ldd	r25, Y+18	; 0x12
     9d4:	29 17       	cp	r18, r25
     9d6:	09 f4       	brne	.+2      	; 0x9da <__mulsf3+0x68>
     9d8:	80 e0       	ldi	r24, 0x00	; 0
     9da:	8a 87       	std	Y+10, r24	; 0x0a
     9dc:	ce 01       	movw	r24, r28
     9de:	09 96       	adiw	r24, 0x09	; 9
     9e0:	bc c0       	rjmp	.+376    	; 0xb5a <__mulsf3+0x1e8>
     9e2:	82 30       	cpi	r24, 0x02	; 2
     9e4:	51 f4       	brne	.+20     	; 0x9fa <__mulsf3+0x88>
     9e6:	81 e0       	ldi	r24, 0x01	; 1
     9e8:	2a 85       	ldd	r18, Y+10	; 0x0a
     9ea:	9a 89       	ldd	r25, Y+18	; 0x12
     9ec:	29 17       	cp	r18, r25
     9ee:	09 f4       	brne	.+2      	; 0x9f2 <__mulsf3+0x80>
     9f0:	80 e0       	ldi	r24, 0x00	; 0
     9f2:	8a 8b       	std	Y+18, r24	; 0x12
     9f4:	ce 01       	movw	r24, r28
     9f6:	41 96       	adiw	r24, 0x11	; 17
     9f8:	b0 c0       	rjmp	.+352    	; 0xb5a <__mulsf3+0x1e8>
     9fa:	6d 84       	ldd	r6, Y+13	; 0x0d
     9fc:	7e 84       	ldd	r7, Y+14	; 0x0e
     9fe:	8f 84       	ldd	r8, Y+15	; 0x0f
     a00:	98 88       	ldd	r9, Y+16	; 0x10
     a02:	ed 88       	ldd	r14, Y+21	; 0x15
     a04:	fe 88       	ldd	r15, Y+22	; 0x16
     a06:	0f 89       	ldd	r16, Y+23	; 0x17
     a08:	18 8d       	ldd	r17, Y+24	; 0x18
     a0a:	e0 e2       	ldi	r30, 0x20	; 32
     a0c:	f0 e0       	ldi	r31, 0x00	; 0
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	dc 01       	movw	r26, r24
     a14:	aa 24       	eor	r10, r10
     a16:	bb 24       	eor	r11, r11
     a18:	65 01       	movw	r12, r10
     a1a:	20 e0       	ldi	r18, 0x00	; 0
     a1c:	30 e0       	ldi	r19, 0x00	; 0
     a1e:	a9 01       	movw	r20, r18
     a20:	b3 01       	movw	r22, r6
     a22:	61 70       	andi	r22, 0x01	; 1
     a24:	70 70       	andi	r23, 0x00	; 0
     a26:	61 15       	cp	r22, r1
     a28:	71 05       	cpc	r23, r1
     a2a:	d1 f0       	breq	.+52     	; 0xa60 <__mulsf3+0xee>
     a2c:	2e 0d       	add	r18, r14
     a2e:	3f 1d       	adc	r19, r15
     a30:	40 1f       	adc	r20, r16
     a32:	51 1f       	adc	r21, r17
     a34:	15 01       	movw	r2, r10
     a36:	26 01       	movw	r4, r12
     a38:	28 0e       	add	r2, r24
     a3a:	39 1e       	adc	r3, r25
     a3c:	4a 1e       	adc	r4, r26
     a3e:	5b 1e       	adc	r5, r27
     a40:	81 e0       	ldi	r24, 0x01	; 1
     a42:	90 e0       	ldi	r25, 0x00	; 0
     a44:	a0 e0       	ldi	r26, 0x00	; 0
     a46:	b0 e0       	ldi	r27, 0x00	; 0
     a48:	2e 15       	cp	r18, r14
     a4a:	3f 05       	cpc	r19, r15
     a4c:	40 07       	cpc	r20, r16
     a4e:	51 07       	cpc	r21, r17
     a50:	18 f0       	brcs	.+6      	; 0xa58 <__mulsf3+0xe6>
     a52:	80 e0       	ldi	r24, 0x00	; 0
     a54:	90 e0       	ldi	r25, 0x00	; 0
     a56:	dc 01       	movw	r26, r24
     a58:	82 0d       	add	r24, r2
     a5a:	93 1d       	adc	r25, r3
     a5c:	a4 1d       	adc	r26, r4
     a5e:	b5 1d       	adc	r27, r5
     a60:	aa 0c       	add	r10, r10
     a62:	bb 1c       	adc	r11, r11
     a64:	cc 1c       	adc	r12, r12
     a66:	dd 1c       	adc	r13, r13
     a68:	17 ff       	sbrs	r17, 7
     a6a:	09 c0       	rjmp	.+18     	; 0xa7e <__mulsf3+0x10c>
     a6c:	61 e0       	ldi	r22, 0x01	; 1
     a6e:	26 2e       	mov	r2, r22
     a70:	31 2c       	mov	r3, r1
     a72:	41 2c       	mov	r4, r1
     a74:	51 2c       	mov	r5, r1
     a76:	a2 28       	or	r10, r2
     a78:	b3 28       	or	r11, r3
     a7a:	c4 28       	or	r12, r4
     a7c:	d5 28       	or	r13, r5
     a7e:	31 97       	sbiw	r30, 0x01	; 1
     a80:	49 f0       	breq	.+18     	; 0xa94 <__mulsf3+0x122>
     a82:	ee 0c       	add	r14, r14
     a84:	ff 1c       	adc	r15, r15
     a86:	00 1f       	adc	r16, r16
     a88:	11 1f       	adc	r17, r17
     a8a:	96 94       	lsr	r9
     a8c:	87 94       	ror	r8
     a8e:	77 94       	ror	r7
     a90:	67 94       	ror	r6
     a92:	c6 cf       	rjmp	.-116    	; 0xa20 <__mulsf3+0xae>
     a94:	6b 89       	ldd	r22, Y+19	; 0x13
     a96:	7c 89       	ldd	r23, Y+20	; 0x14
     a98:	eb 85       	ldd	r30, Y+11	; 0x0b
     a9a:	fc 85       	ldd	r31, Y+12	; 0x0c
     a9c:	6e 0f       	add	r22, r30
     a9e:	7f 1f       	adc	r23, r31
     aa0:	6e 5f       	subi	r22, 0xFE	; 254
     aa2:	7f 4f       	sbci	r23, 0xFF	; 255
     aa4:	7c 8f       	std	Y+28, r23	; 0x1c
     aa6:	6b 8f       	std	Y+27, r22	; 0x1b
     aa8:	61 e0       	ldi	r22, 0x01	; 1
     aaa:	ea 85       	ldd	r30, Y+10	; 0x0a
     aac:	7a 89       	ldd	r23, Y+18	; 0x12
     aae:	e7 17       	cp	r30, r23
     ab0:	09 f4       	brne	.+2      	; 0xab4 <__mulsf3+0x142>
     ab2:	60 e0       	ldi	r22, 0x00	; 0
     ab4:	6a 8f       	std	Y+26, r22	; 0x1a
     ab6:	6b 8d       	ldd	r22, Y+27	; 0x1b
     ab8:	7c 8d       	ldd	r23, Y+28	; 0x1c
     aba:	10 c0       	rjmp	.+32     	; 0xadc <__mulsf3+0x16a>
     abc:	fc 01       	movw	r30, r24
     abe:	e1 70       	andi	r30, 0x01	; 1
     ac0:	f0 70       	andi	r31, 0x00	; 0
     ac2:	30 97       	sbiw	r30, 0x00	; 0
     ac4:	29 f0       	breq	.+10     	; 0xad0 <__mulsf3+0x15e>
     ac6:	56 95       	lsr	r21
     ac8:	47 95       	ror	r20
     aca:	37 95       	ror	r19
     acc:	27 95       	ror	r18
     ace:	50 68       	ori	r21, 0x80	; 128
     ad0:	b6 95       	lsr	r27
     ad2:	a7 95       	ror	r26
     ad4:	97 95       	ror	r25
     ad6:	87 95       	ror	r24
     ad8:	6f 5f       	subi	r22, 0xFF	; 255
     ada:	7f 4f       	sbci	r23, 0xFF	; 255
     adc:	b7 fd       	sbrc	r27, 7
     ade:	ee cf       	rjmp	.-36     	; 0xabc <__mulsf3+0x14a>
     ae0:	0c c0       	rjmp	.+24     	; 0xafa <__mulsf3+0x188>
     ae2:	88 0f       	add	r24, r24
     ae4:	99 1f       	adc	r25, r25
     ae6:	aa 1f       	adc	r26, r26
     ae8:	bb 1f       	adc	r27, r27
     aea:	57 fd       	sbrc	r21, 7
     aec:	81 60       	ori	r24, 0x01	; 1
     aee:	22 0f       	add	r18, r18
     af0:	33 1f       	adc	r19, r19
     af2:	44 1f       	adc	r20, r20
     af4:	55 1f       	adc	r21, r21
     af6:	61 50       	subi	r22, 0x01	; 1
     af8:	70 40       	sbci	r23, 0x00	; 0
     afa:	80 30       	cpi	r24, 0x00	; 0
     afc:	e0 e0       	ldi	r30, 0x00	; 0
     afe:	9e 07       	cpc	r25, r30
     b00:	e0 e0       	ldi	r30, 0x00	; 0
     b02:	ae 07       	cpc	r26, r30
     b04:	e0 e4       	ldi	r30, 0x40	; 64
     b06:	be 07       	cpc	r27, r30
     b08:	60 f3       	brcs	.-40     	; 0xae2 <__mulsf3+0x170>
     b0a:	6b 8f       	std	Y+27, r22	; 0x1b
     b0c:	7c 8f       	std	Y+28, r23	; 0x1c
     b0e:	6f e7       	ldi	r22, 0x7F	; 127
     b10:	e6 2e       	mov	r14, r22
     b12:	f1 2c       	mov	r15, r1
     b14:	01 2d       	mov	r16, r1
     b16:	11 2d       	mov	r17, r1
     b18:	e8 22       	and	r14, r24
     b1a:	f9 22       	and	r15, r25
     b1c:	0a 23       	and	r16, r26
     b1e:	1b 23       	and	r17, r27
     b20:	60 e4       	ldi	r22, 0x40	; 64
     b22:	e6 16       	cp	r14, r22
     b24:	f1 04       	cpc	r15, r1
     b26:	01 05       	cpc	r16, r1
     b28:	11 05       	cpc	r17, r1
     b2a:	61 f4       	brne	.+24     	; 0xb44 <__mulsf3+0x1d2>
     b2c:	87 fd       	sbrc	r24, 7
     b2e:	0a c0       	rjmp	.+20     	; 0xb44 <__mulsf3+0x1d2>
     b30:	21 15       	cp	r18, r1
     b32:	31 05       	cpc	r19, r1
     b34:	41 05       	cpc	r20, r1
     b36:	51 05       	cpc	r21, r1
     b38:	29 f0       	breq	.+10     	; 0xb44 <__mulsf3+0x1d2>
     b3a:	80 5c       	subi	r24, 0xC0	; 192
     b3c:	9f 4f       	sbci	r25, 0xFF	; 255
     b3e:	af 4f       	sbci	r26, 0xFF	; 255
     b40:	bf 4f       	sbci	r27, 0xFF	; 255
     b42:	80 78       	andi	r24, 0x80	; 128
     b44:	8d 8f       	std	Y+29, r24	; 0x1d
     b46:	9e 8f       	std	Y+30, r25	; 0x1e
     b48:	af 8f       	std	Y+31, r26	; 0x1f
     b4a:	b8 a3       	std	Y+32, r27	; 0x20
     b4c:	83 e0       	ldi	r24, 0x03	; 3
     b4e:	89 8f       	std	Y+25, r24	; 0x19
     b50:	ce 01       	movw	r24, r28
     b52:	49 96       	adiw	r24, 0x19	; 25
     b54:	02 c0       	rjmp	.+4      	; 0xb5a <__mulsf3+0x1e8>
     b56:	80 e6       	ldi	r24, 0x60	; 96
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	0e 94 95 06 	call	0xd2a	; 0xd2a <__pack_f>
     b5e:	a0 96       	adiw	r28, 0x20	; 32
     b60:	e2 e1       	ldi	r30, 0x12	; 18
     b62:	0c 94 41 08 	jmp	0x1082	; 0x1082 <__epilogue_restores__>

00000b66 <__gtsf2>:
     b66:	a8 e1       	ldi	r26, 0x18	; 24
     b68:	b0 e0       	ldi	r27, 0x00	; 0
     b6a:	e9 eb       	ldi	r30, 0xB9	; 185
     b6c:	f5 e0       	ldi	r31, 0x05	; 5
     b6e:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__prologue_saves__+0x18>
     b72:	69 83       	std	Y+1, r22	; 0x01
     b74:	7a 83       	std	Y+2, r23	; 0x02
     b76:	8b 83       	std	Y+3, r24	; 0x03
     b78:	9c 83       	std	Y+4, r25	; 0x04
     b7a:	2d 83       	std	Y+5, r18	; 0x05
     b7c:	3e 83       	std	Y+6, r19	; 0x06
     b7e:	4f 83       	std	Y+7, r20	; 0x07
     b80:	58 87       	std	Y+8, r21	; 0x08
     b82:	8e 01       	movw	r16, r28
     b84:	07 5f       	subi	r16, 0xF7	; 247
     b86:	1f 4f       	sbci	r17, 0xFF	; 255
     b88:	ce 01       	movw	r24, r28
     b8a:	01 96       	adiw	r24, 0x01	; 1
     b8c:	b8 01       	movw	r22, r16
     b8e:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     b92:	81 e1       	ldi	r24, 0x11	; 17
     b94:	e8 2e       	mov	r14, r24
     b96:	f1 2c       	mov	r15, r1
     b98:	ec 0e       	add	r14, r28
     b9a:	fd 1e       	adc	r15, r29
     b9c:	ce 01       	movw	r24, r28
     b9e:	05 96       	adiw	r24, 0x05	; 5
     ba0:	b7 01       	movw	r22, r14
     ba2:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     ba6:	89 85       	ldd	r24, Y+9	; 0x09
     ba8:	82 30       	cpi	r24, 0x02	; 2
     baa:	40 f0       	brcs	.+16     	; 0xbbc <__gtsf2+0x56>
     bac:	89 89       	ldd	r24, Y+17	; 0x11
     bae:	82 30       	cpi	r24, 0x02	; 2
     bb0:	28 f0       	brcs	.+10     	; 0xbbc <__gtsf2+0x56>
     bb2:	c8 01       	movw	r24, r16
     bb4:	b7 01       	movw	r22, r14
     bb6:	0e 94 cc 07 	call	0xf98	; 0xf98 <__fpcmp_parts_f>
     bba:	01 c0       	rjmp	.+2      	; 0xbbe <__gtsf2+0x58>
     bbc:	8f ef       	ldi	r24, 0xFF	; 255
     bbe:	68 96       	adiw	r28, 0x18	; 24
     bc0:	e6 e0       	ldi	r30, 0x06	; 6
     bc2:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x18>

00000bc6 <__gesf2>:
     bc6:	a8 e1       	ldi	r26, 0x18	; 24
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	e9 ee       	ldi	r30, 0xE9	; 233
     bcc:	f5 e0       	ldi	r31, 0x05	; 5
     bce:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__prologue_saves__+0x18>
     bd2:	69 83       	std	Y+1, r22	; 0x01
     bd4:	7a 83       	std	Y+2, r23	; 0x02
     bd6:	8b 83       	std	Y+3, r24	; 0x03
     bd8:	9c 83       	std	Y+4, r25	; 0x04
     bda:	2d 83       	std	Y+5, r18	; 0x05
     bdc:	3e 83       	std	Y+6, r19	; 0x06
     bde:	4f 83       	std	Y+7, r20	; 0x07
     be0:	58 87       	std	Y+8, r21	; 0x08
     be2:	8e 01       	movw	r16, r28
     be4:	07 5f       	subi	r16, 0xF7	; 247
     be6:	1f 4f       	sbci	r17, 0xFF	; 255
     be8:	ce 01       	movw	r24, r28
     bea:	01 96       	adiw	r24, 0x01	; 1
     bec:	b8 01       	movw	r22, r16
     bee:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     bf2:	81 e1       	ldi	r24, 0x11	; 17
     bf4:	e8 2e       	mov	r14, r24
     bf6:	f1 2c       	mov	r15, r1
     bf8:	ec 0e       	add	r14, r28
     bfa:	fd 1e       	adc	r15, r29
     bfc:	ce 01       	movw	r24, r28
     bfe:	05 96       	adiw	r24, 0x05	; 5
     c00:	b7 01       	movw	r22, r14
     c02:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     c06:	89 85       	ldd	r24, Y+9	; 0x09
     c08:	82 30       	cpi	r24, 0x02	; 2
     c0a:	40 f0       	brcs	.+16     	; 0xc1c <__gesf2+0x56>
     c0c:	89 89       	ldd	r24, Y+17	; 0x11
     c0e:	82 30       	cpi	r24, 0x02	; 2
     c10:	28 f0       	brcs	.+10     	; 0xc1c <__gesf2+0x56>
     c12:	c8 01       	movw	r24, r16
     c14:	b7 01       	movw	r22, r14
     c16:	0e 94 cc 07 	call	0xf98	; 0xf98 <__fpcmp_parts_f>
     c1a:	01 c0       	rjmp	.+2      	; 0xc1e <__gesf2+0x58>
     c1c:	8f ef       	ldi	r24, 0xFF	; 255
     c1e:	68 96       	adiw	r28, 0x18	; 24
     c20:	e6 e0       	ldi	r30, 0x06	; 6
     c22:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x18>

00000c26 <__ltsf2>:
     c26:	a8 e1       	ldi	r26, 0x18	; 24
     c28:	b0 e0       	ldi	r27, 0x00	; 0
     c2a:	e9 e1       	ldi	r30, 0x19	; 25
     c2c:	f6 e0       	ldi	r31, 0x06	; 6
     c2e:	0c 94 31 08 	jmp	0x1062	; 0x1062 <__prologue_saves__+0x18>
     c32:	69 83       	std	Y+1, r22	; 0x01
     c34:	7a 83       	std	Y+2, r23	; 0x02
     c36:	8b 83       	std	Y+3, r24	; 0x03
     c38:	9c 83       	std	Y+4, r25	; 0x04
     c3a:	2d 83       	std	Y+5, r18	; 0x05
     c3c:	3e 83       	std	Y+6, r19	; 0x06
     c3e:	4f 83       	std	Y+7, r20	; 0x07
     c40:	58 87       	std	Y+8, r21	; 0x08
     c42:	8e 01       	movw	r16, r28
     c44:	07 5f       	subi	r16, 0xF7	; 247
     c46:	1f 4f       	sbci	r17, 0xFF	; 255
     c48:	ce 01       	movw	r24, r28
     c4a:	01 96       	adiw	r24, 0x01	; 1
     c4c:	b8 01       	movw	r22, r16
     c4e:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     c52:	81 e1       	ldi	r24, 0x11	; 17
     c54:	e8 2e       	mov	r14, r24
     c56:	f1 2c       	mov	r15, r1
     c58:	ec 0e       	add	r14, r28
     c5a:	fd 1e       	adc	r15, r29
     c5c:	ce 01       	movw	r24, r28
     c5e:	05 96       	adiw	r24, 0x05	; 5
     c60:	b7 01       	movw	r22, r14
     c62:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     c66:	89 85       	ldd	r24, Y+9	; 0x09
     c68:	82 30       	cpi	r24, 0x02	; 2
     c6a:	40 f0       	brcs	.+16     	; 0xc7c <__ltsf2+0x56>
     c6c:	89 89       	ldd	r24, Y+17	; 0x11
     c6e:	82 30       	cpi	r24, 0x02	; 2
     c70:	28 f0       	brcs	.+10     	; 0xc7c <__ltsf2+0x56>
     c72:	c8 01       	movw	r24, r16
     c74:	b7 01       	movw	r22, r14
     c76:	0e 94 cc 07 	call	0xf98	; 0xf98 <__fpcmp_parts_f>
     c7a:	01 c0       	rjmp	.+2      	; 0xc7e <__ltsf2+0x58>
     c7c:	81 e0       	ldi	r24, 0x01	; 1
     c7e:	68 96       	adiw	r28, 0x18	; 24
     c80:	e6 e0       	ldi	r30, 0x06	; 6
     c82:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x18>

00000c86 <__fixsfsi>:
     c86:	ac e0       	ldi	r26, 0x0C	; 12
     c88:	b0 e0       	ldi	r27, 0x00	; 0
     c8a:	e9 e4       	ldi	r30, 0x49	; 73
     c8c:	f6 e0       	ldi	r31, 0x06	; 6
     c8e:	0c 94 35 08 	jmp	0x106a	; 0x106a <__prologue_saves__+0x20>
     c92:	69 83       	std	Y+1, r22	; 0x01
     c94:	7a 83       	std	Y+2, r23	; 0x02
     c96:	8b 83       	std	Y+3, r24	; 0x03
     c98:	9c 83       	std	Y+4, r25	; 0x04
     c9a:	ce 01       	movw	r24, r28
     c9c:	01 96       	adiw	r24, 0x01	; 1
     c9e:	be 01       	movw	r22, r28
     ca0:	6b 5f       	subi	r22, 0xFB	; 251
     ca2:	7f 4f       	sbci	r23, 0xFF	; 255
     ca4:	0e 94 63 07 	call	0xec6	; 0xec6 <__unpack_f>
     ca8:	8d 81       	ldd	r24, Y+5	; 0x05
     caa:	82 30       	cpi	r24, 0x02	; 2
     cac:	81 f1       	breq	.+96     	; 0xd0e <__fixsfsi+0x88>
     cae:	82 30       	cpi	r24, 0x02	; 2
     cb0:	70 f1       	brcs	.+92     	; 0xd0e <__fixsfsi+0x88>
     cb2:	84 30       	cpi	r24, 0x04	; 4
     cb4:	21 f4       	brne	.+8      	; 0xcbe <__fixsfsi+0x38>
     cb6:	8e 81       	ldd	r24, Y+6	; 0x06
     cb8:	88 23       	and	r24, r24
     cba:	69 f1       	breq	.+90     	; 0xd16 <__fixsfsi+0x90>
     cbc:	0a c0       	rjmp	.+20     	; 0xcd2 <__fixsfsi+0x4c>
     cbe:	2f 81       	ldd	r18, Y+7	; 0x07
     cc0:	38 85       	ldd	r19, Y+8	; 0x08
     cc2:	37 fd       	sbrc	r19, 7
     cc4:	24 c0       	rjmp	.+72     	; 0xd0e <__fixsfsi+0x88>
     cc6:	6e 81       	ldd	r22, Y+6	; 0x06
     cc8:	2f 31       	cpi	r18, 0x1F	; 31
     cca:	31 05       	cpc	r19, r1
     ccc:	3c f0       	brlt	.+14     	; 0xcdc <__fixsfsi+0x56>
     cce:	66 23       	and	r22, r22
     cd0:	11 f1       	breq	.+68     	; 0xd16 <__fixsfsi+0x90>
     cd2:	20 e0       	ldi	r18, 0x00	; 0
     cd4:	30 e0       	ldi	r19, 0x00	; 0
     cd6:	40 e0       	ldi	r20, 0x00	; 0
     cd8:	50 e8       	ldi	r21, 0x80	; 128
     cda:	21 c0       	rjmp	.+66     	; 0xd1e <__fixsfsi+0x98>
     cdc:	8e e1       	ldi	r24, 0x1E	; 30
     cde:	90 e0       	ldi	r25, 0x00	; 0
     ce0:	82 1b       	sub	r24, r18
     ce2:	93 0b       	sbc	r25, r19
     ce4:	29 85       	ldd	r18, Y+9	; 0x09
     ce6:	3a 85       	ldd	r19, Y+10	; 0x0a
     ce8:	4b 85       	ldd	r20, Y+11	; 0x0b
     cea:	5c 85       	ldd	r21, Y+12	; 0x0c
     cec:	04 c0       	rjmp	.+8      	; 0xcf6 <__fixsfsi+0x70>
     cee:	56 95       	lsr	r21
     cf0:	47 95       	ror	r20
     cf2:	37 95       	ror	r19
     cf4:	27 95       	ror	r18
     cf6:	8a 95       	dec	r24
     cf8:	d2 f7       	brpl	.-12     	; 0xcee <__fixsfsi+0x68>
     cfa:	66 23       	and	r22, r22
     cfc:	81 f0       	breq	.+32     	; 0xd1e <__fixsfsi+0x98>
     cfe:	50 95       	com	r21
     d00:	40 95       	com	r20
     d02:	30 95       	com	r19
     d04:	21 95       	neg	r18
     d06:	3f 4f       	sbci	r19, 0xFF	; 255
     d08:	4f 4f       	sbci	r20, 0xFF	; 255
     d0a:	5f 4f       	sbci	r21, 0xFF	; 255
     d0c:	08 c0       	rjmp	.+16     	; 0xd1e <__fixsfsi+0x98>
     d0e:	20 e0       	ldi	r18, 0x00	; 0
     d10:	30 e0       	ldi	r19, 0x00	; 0
     d12:	a9 01       	movw	r20, r18
     d14:	04 c0       	rjmp	.+8      	; 0xd1e <__fixsfsi+0x98>
     d16:	2f ef       	ldi	r18, 0xFF	; 255
     d18:	3f ef       	ldi	r19, 0xFF	; 255
     d1a:	4f ef       	ldi	r20, 0xFF	; 255
     d1c:	5f e7       	ldi	r21, 0x7F	; 127
     d1e:	b9 01       	movw	r22, r18
     d20:	ca 01       	movw	r24, r20
     d22:	2c 96       	adiw	r28, 0x0c	; 12
     d24:	e2 e0       	ldi	r30, 0x02	; 2
     d26:	0c 94 51 08 	jmp	0x10a2	; 0x10a2 <__epilogue_restores__+0x20>

00000d2a <__pack_f>:
     d2a:	ef 92       	push	r14
     d2c:	ff 92       	push	r15
     d2e:	0f 93       	push	r16
     d30:	1f 93       	push	r17
     d32:	cf 93       	push	r28
     d34:	df 93       	push	r29
     d36:	fc 01       	movw	r30, r24
     d38:	24 81       	ldd	r18, Z+4	; 0x04
     d3a:	35 81       	ldd	r19, Z+5	; 0x05
     d3c:	46 81       	ldd	r20, Z+6	; 0x06
     d3e:	57 81       	ldd	r21, Z+7	; 0x07
     d40:	61 81       	ldd	r22, Z+1	; 0x01
     d42:	80 81       	ld	r24, Z
     d44:	82 30       	cpi	r24, 0x02	; 2
     d46:	20 f4       	brcc	.+8      	; 0xd50 <__pack_f+0x26>
     d48:	40 61       	ori	r20, 0x10	; 16
     d4a:	ef ef       	ldi	r30, 0xFF	; 255
     d4c:	f0 e0       	ldi	r31, 0x00	; 0
     d4e:	a3 c0       	rjmp	.+326    	; 0xe96 <__pack_f+0x16c>
     d50:	84 30       	cpi	r24, 0x04	; 4
     d52:	09 f4       	brne	.+2      	; 0xd56 <__pack_f+0x2c>
     d54:	9b c0       	rjmp	.+310    	; 0xe8c <__pack_f+0x162>
     d56:	82 30       	cpi	r24, 0x02	; 2
     d58:	09 f4       	brne	.+2      	; 0xd5c <__pack_f+0x32>
     d5a:	92 c0       	rjmp	.+292    	; 0xe80 <__pack_f+0x156>
     d5c:	21 15       	cp	r18, r1
     d5e:	31 05       	cpc	r19, r1
     d60:	41 05       	cpc	r20, r1
     d62:	51 05       	cpc	r21, r1
     d64:	09 f4       	brne	.+2      	; 0xd68 <__pack_f+0x3e>
     d66:	8f c0       	rjmp	.+286    	; 0xe86 <__pack_f+0x15c>
     d68:	02 80       	ldd	r0, Z+2	; 0x02
     d6a:	f3 81       	ldd	r31, Z+3	; 0x03
     d6c:	e0 2d       	mov	r30, r0
     d6e:	8f ef       	ldi	r24, 0xFF	; 255
     d70:	e2 38       	cpi	r30, 0x82	; 130
     d72:	f8 07       	cpc	r31, r24
     d74:	0c f0       	brlt	.+2      	; 0xd78 <__pack_f+0x4e>
     d76:	5a c0       	rjmp	.+180    	; 0xe2c <__pack_f+0x102>
     d78:	c2 e8       	ldi	r28, 0x82	; 130
     d7a:	df ef       	ldi	r29, 0xFF	; 255
     d7c:	ce 1b       	sub	r28, r30
     d7e:	df 0b       	sbc	r29, r31
     d80:	ca 31       	cpi	r28, 0x1A	; 26
     d82:	d1 05       	cpc	r29, r1
     d84:	6c f5       	brge	.+90     	; 0xde0 <__pack_f+0xb6>
     d86:	79 01       	movw	r14, r18
     d88:	8a 01       	movw	r16, r20
     d8a:	0c 2e       	mov	r0, r28
     d8c:	04 c0       	rjmp	.+8      	; 0xd96 <__pack_f+0x6c>
     d8e:	16 95       	lsr	r17
     d90:	07 95       	ror	r16
     d92:	f7 94       	ror	r15
     d94:	e7 94       	ror	r14
     d96:	0a 94       	dec	r0
     d98:	d2 f7       	brpl	.-12     	; 0xd8e <__pack_f+0x64>
     d9a:	81 e0       	ldi	r24, 0x01	; 1
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	a0 e0       	ldi	r26, 0x00	; 0
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	0c 2e       	mov	r0, r28
     da4:	04 c0       	rjmp	.+8      	; 0xdae <__pack_f+0x84>
     da6:	88 0f       	add	r24, r24
     da8:	99 1f       	adc	r25, r25
     daa:	aa 1f       	adc	r26, r26
     dac:	bb 1f       	adc	r27, r27
     dae:	0a 94       	dec	r0
     db0:	d2 f7       	brpl	.-12     	; 0xda6 <__pack_f+0x7c>
     db2:	01 97       	sbiw	r24, 0x01	; 1
     db4:	a1 09       	sbc	r26, r1
     db6:	b1 09       	sbc	r27, r1
     db8:	82 23       	and	r24, r18
     dba:	93 23       	and	r25, r19
     dbc:	a4 23       	and	r26, r20
     dbe:	b5 23       	and	r27, r21
     dc0:	21 e0       	ldi	r18, 0x01	; 1
     dc2:	30 e0       	ldi	r19, 0x00	; 0
     dc4:	40 e0       	ldi	r20, 0x00	; 0
     dc6:	50 e0       	ldi	r21, 0x00	; 0
     dc8:	00 97       	sbiw	r24, 0x00	; 0
     dca:	a1 05       	cpc	r26, r1
     dcc:	b1 05       	cpc	r27, r1
     dce:	19 f4       	brne	.+6      	; 0xdd6 <__pack_f+0xac>
     dd0:	20 e0       	ldi	r18, 0x00	; 0
     dd2:	30 e0       	ldi	r19, 0x00	; 0
     dd4:	a9 01       	movw	r20, r18
     dd6:	2e 29       	or	r18, r14
     dd8:	3f 29       	or	r19, r15
     dda:	40 2b       	or	r20, r16
     ddc:	51 2b       	or	r21, r17
     dde:	03 c0       	rjmp	.+6      	; 0xde6 <__pack_f+0xbc>
     de0:	20 e0       	ldi	r18, 0x00	; 0
     de2:	30 e0       	ldi	r19, 0x00	; 0
     de4:	a9 01       	movw	r20, r18
     de6:	da 01       	movw	r26, r20
     de8:	c9 01       	movw	r24, r18
     dea:	8f 77       	andi	r24, 0x7F	; 127
     dec:	90 70       	andi	r25, 0x00	; 0
     dee:	a0 70       	andi	r26, 0x00	; 0
     df0:	b0 70       	andi	r27, 0x00	; 0
     df2:	80 34       	cpi	r24, 0x40	; 64
     df4:	91 05       	cpc	r25, r1
     df6:	a1 05       	cpc	r26, r1
     df8:	b1 05       	cpc	r27, r1
     dfa:	39 f4       	brne	.+14     	; 0xe0a <__pack_f+0xe0>
     dfc:	27 ff       	sbrs	r18, 7
     dfe:	09 c0       	rjmp	.+18     	; 0xe12 <__pack_f+0xe8>
     e00:	20 5c       	subi	r18, 0xC0	; 192
     e02:	3f 4f       	sbci	r19, 0xFF	; 255
     e04:	4f 4f       	sbci	r20, 0xFF	; 255
     e06:	5f 4f       	sbci	r21, 0xFF	; 255
     e08:	04 c0       	rjmp	.+8      	; 0xe12 <__pack_f+0xe8>
     e0a:	21 5c       	subi	r18, 0xC1	; 193
     e0c:	3f 4f       	sbci	r19, 0xFF	; 255
     e0e:	4f 4f       	sbci	r20, 0xFF	; 255
     e10:	5f 4f       	sbci	r21, 0xFF	; 255
     e12:	e1 e0       	ldi	r30, 0x01	; 1
     e14:	f0 e0       	ldi	r31, 0x00	; 0
     e16:	20 30       	cpi	r18, 0x00	; 0
     e18:	80 e0       	ldi	r24, 0x00	; 0
     e1a:	38 07       	cpc	r19, r24
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	48 07       	cpc	r20, r24
     e20:	80 e4       	ldi	r24, 0x40	; 64
     e22:	58 07       	cpc	r21, r24
     e24:	28 f5       	brcc	.+74     	; 0xe70 <__pack_f+0x146>
     e26:	e0 e0       	ldi	r30, 0x00	; 0
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	22 c0       	rjmp	.+68     	; 0xe70 <__pack_f+0x146>
     e2c:	e0 38       	cpi	r30, 0x80	; 128
     e2e:	f1 05       	cpc	r31, r1
     e30:	6c f5       	brge	.+90     	; 0xe8c <__pack_f+0x162>
     e32:	e1 58       	subi	r30, 0x81	; 129
     e34:	ff 4f       	sbci	r31, 0xFF	; 255
     e36:	da 01       	movw	r26, r20
     e38:	c9 01       	movw	r24, r18
     e3a:	8f 77       	andi	r24, 0x7F	; 127
     e3c:	90 70       	andi	r25, 0x00	; 0
     e3e:	a0 70       	andi	r26, 0x00	; 0
     e40:	b0 70       	andi	r27, 0x00	; 0
     e42:	80 34       	cpi	r24, 0x40	; 64
     e44:	91 05       	cpc	r25, r1
     e46:	a1 05       	cpc	r26, r1
     e48:	b1 05       	cpc	r27, r1
     e4a:	39 f4       	brne	.+14     	; 0xe5a <__pack_f+0x130>
     e4c:	27 ff       	sbrs	r18, 7
     e4e:	09 c0       	rjmp	.+18     	; 0xe62 <__pack_f+0x138>
     e50:	20 5c       	subi	r18, 0xC0	; 192
     e52:	3f 4f       	sbci	r19, 0xFF	; 255
     e54:	4f 4f       	sbci	r20, 0xFF	; 255
     e56:	5f 4f       	sbci	r21, 0xFF	; 255
     e58:	04 c0       	rjmp	.+8      	; 0xe62 <__pack_f+0x138>
     e5a:	21 5c       	subi	r18, 0xC1	; 193
     e5c:	3f 4f       	sbci	r19, 0xFF	; 255
     e5e:	4f 4f       	sbci	r20, 0xFF	; 255
     e60:	5f 4f       	sbci	r21, 0xFF	; 255
     e62:	57 ff       	sbrs	r21, 7
     e64:	05 c0       	rjmp	.+10     	; 0xe70 <__pack_f+0x146>
     e66:	56 95       	lsr	r21
     e68:	47 95       	ror	r20
     e6a:	37 95       	ror	r19
     e6c:	27 95       	ror	r18
     e6e:	31 96       	adiw	r30, 0x01	; 1
     e70:	87 e0       	ldi	r24, 0x07	; 7
     e72:	56 95       	lsr	r21
     e74:	47 95       	ror	r20
     e76:	37 95       	ror	r19
     e78:	27 95       	ror	r18
     e7a:	8a 95       	dec	r24
     e7c:	d1 f7       	brne	.-12     	; 0xe72 <__pack_f+0x148>
     e7e:	0b c0       	rjmp	.+22     	; 0xe96 <__pack_f+0x16c>
     e80:	e0 e0       	ldi	r30, 0x00	; 0
     e82:	f0 e0       	ldi	r31, 0x00	; 0
     e84:	05 c0       	rjmp	.+10     	; 0xe90 <__pack_f+0x166>
     e86:	e0 e0       	ldi	r30, 0x00	; 0
     e88:	f0 e0       	ldi	r31, 0x00	; 0
     e8a:	05 c0       	rjmp	.+10     	; 0xe96 <__pack_f+0x16c>
     e8c:	ef ef       	ldi	r30, 0xFF	; 255
     e8e:	f0 e0       	ldi	r31, 0x00	; 0
     e90:	20 e0       	ldi	r18, 0x00	; 0
     e92:	30 e0       	ldi	r19, 0x00	; 0
     e94:	a9 01       	movw	r20, r18
     e96:	8e 2f       	mov	r24, r30
     e98:	87 95       	ror	r24
     e9a:	88 27       	eor	r24, r24
     e9c:	87 95       	ror	r24
     e9e:	94 2f       	mov	r25, r20
     ea0:	9f 77       	andi	r25, 0x7F	; 127
     ea2:	67 95       	ror	r22
     ea4:	66 27       	eor	r22, r22
     ea6:	67 95       	ror	r22
     ea8:	e6 95       	lsr	r30
     eaa:	e2 2e       	mov	r14, r18
     eac:	a9 2f       	mov	r26, r25
     eae:	a8 2b       	or	r26, r24
     eb0:	fe 2f       	mov	r31, r30
     eb2:	f6 2b       	or	r31, r22
     eb4:	62 2f       	mov	r22, r18
     eb6:	73 2f       	mov	r23, r19
     eb8:	8a 2f       	mov	r24, r26
     eba:	9f 2f       	mov	r25, r31
     ebc:	cd b7       	in	r28, 0x3d	; 61
     ebe:	de b7       	in	r29, 0x3e	; 62
     ec0:	e6 e0       	ldi	r30, 0x06	; 6
     ec2:	0c 94 4d 08 	jmp	0x109a	; 0x109a <__epilogue_restores__+0x18>

00000ec6 <__unpack_f>:
     ec6:	dc 01       	movw	r26, r24
     ec8:	fb 01       	movw	r30, r22
     eca:	2c 91       	ld	r18, X
     ecc:	11 96       	adiw	r26, 0x01	; 1
     ece:	3c 91       	ld	r19, X
     ed0:	11 97       	sbiw	r26, 0x01	; 1
     ed2:	12 96       	adiw	r26, 0x02	; 2
     ed4:	8c 91       	ld	r24, X
     ed6:	12 97       	sbiw	r26, 0x02	; 2
     ed8:	48 2f       	mov	r20, r24
     eda:	4f 77       	andi	r20, 0x7F	; 127
     edc:	50 e0       	ldi	r21, 0x00	; 0
     ede:	98 2f       	mov	r25, r24
     ee0:	99 1f       	adc	r25, r25
     ee2:	99 27       	eor	r25, r25
     ee4:	99 1f       	adc	r25, r25
     ee6:	13 96       	adiw	r26, 0x03	; 3
     ee8:	6c 91       	ld	r22, X
     eea:	13 97       	sbiw	r26, 0x03	; 3
     eec:	86 2f       	mov	r24, r22
     eee:	88 0f       	add	r24, r24
     ef0:	89 2b       	or	r24, r25
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	66 1f       	adc	r22, r22
     ef6:	66 27       	eor	r22, r22
     ef8:	66 1f       	adc	r22, r22
     efa:	61 83       	std	Z+1, r22	; 0x01
     efc:	00 97       	sbiw	r24, 0x00	; 0
     efe:	39 f5       	brne	.+78     	; 0xf4e <__unpack_f+0x88>
     f00:	21 15       	cp	r18, r1
     f02:	31 05       	cpc	r19, r1
     f04:	41 05       	cpc	r20, r1
     f06:	51 05       	cpc	r21, r1
     f08:	11 f4       	brne	.+4      	; 0xf0e <__unpack_f+0x48>
     f0a:	82 e0       	ldi	r24, 0x02	; 2
     f0c:	29 c0       	rjmp	.+82     	; 0xf60 <__unpack_f+0x9a>
     f0e:	82 e8       	ldi	r24, 0x82	; 130
     f10:	9f ef       	ldi	r25, 0xFF	; 255
     f12:	93 83       	std	Z+3, r25	; 0x03
     f14:	82 83       	std	Z+2, r24	; 0x02
     f16:	67 e0       	ldi	r22, 0x07	; 7
     f18:	22 0f       	add	r18, r18
     f1a:	33 1f       	adc	r19, r19
     f1c:	44 1f       	adc	r20, r20
     f1e:	55 1f       	adc	r21, r21
     f20:	6a 95       	dec	r22
     f22:	d1 f7       	brne	.-12     	; 0xf18 <__unpack_f+0x52>
     f24:	83 e0       	ldi	r24, 0x03	; 3
     f26:	80 83       	st	Z, r24
     f28:	09 c0       	rjmp	.+18     	; 0xf3c <__unpack_f+0x76>
     f2a:	22 0f       	add	r18, r18
     f2c:	33 1f       	adc	r19, r19
     f2e:	44 1f       	adc	r20, r20
     f30:	55 1f       	adc	r21, r21
     f32:	82 81       	ldd	r24, Z+2	; 0x02
     f34:	93 81       	ldd	r25, Z+3	; 0x03
     f36:	01 97       	sbiw	r24, 0x01	; 1
     f38:	93 83       	std	Z+3, r25	; 0x03
     f3a:	82 83       	std	Z+2, r24	; 0x02
     f3c:	20 30       	cpi	r18, 0x00	; 0
     f3e:	80 e0       	ldi	r24, 0x00	; 0
     f40:	38 07       	cpc	r19, r24
     f42:	80 e0       	ldi	r24, 0x00	; 0
     f44:	48 07       	cpc	r20, r24
     f46:	80 e4       	ldi	r24, 0x40	; 64
     f48:	58 07       	cpc	r21, r24
     f4a:	78 f3       	brcs	.-34     	; 0xf2a <__unpack_f+0x64>
     f4c:	20 c0       	rjmp	.+64     	; 0xf8e <__unpack_f+0xc8>
     f4e:	8f 3f       	cpi	r24, 0xFF	; 255
     f50:	91 05       	cpc	r25, r1
     f52:	79 f4       	brne	.+30     	; 0xf72 <__unpack_f+0xac>
     f54:	21 15       	cp	r18, r1
     f56:	31 05       	cpc	r19, r1
     f58:	41 05       	cpc	r20, r1
     f5a:	51 05       	cpc	r21, r1
     f5c:	19 f4       	brne	.+6      	; 0xf64 <__unpack_f+0x9e>
     f5e:	84 e0       	ldi	r24, 0x04	; 4
     f60:	80 83       	st	Z, r24
     f62:	08 95       	ret
     f64:	44 ff       	sbrs	r20, 4
     f66:	03 c0       	rjmp	.+6      	; 0xf6e <__unpack_f+0xa8>
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	80 83       	st	Z, r24
     f6c:	10 c0       	rjmp	.+32     	; 0xf8e <__unpack_f+0xc8>
     f6e:	10 82       	st	Z, r1
     f70:	0e c0       	rjmp	.+28     	; 0xf8e <__unpack_f+0xc8>
     f72:	8f 57       	subi	r24, 0x7F	; 127
     f74:	90 40       	sbci	r25, 0x00	; 0
     f76:	93 83       	std	Z+3, r25	; 0x03
     f78:	82 83       	std	Z+2, r24	; 0x02
     f7a:	83 e0       	ldi	r24, 0x03	; 3
     f7c:	80 83       	st	Z, r24
     f7e:	87 e0       	ldi	r24, 0x07	; 7
     f80:	22 0f       	add	r18, r18
     f82:	33 1f       	adc	r19, r19
     f84:	44 1f       	adc	r20, r20
     f86:	55 1f       	adc	r21, r21
     f88:	8a 95       	dec	r24
     f8a:	d1 f7       	brne	.-12     	; 0xf80 <__unpack_f+0xba>
     f8c:	50 64       	ori	r21, 0x40	; 64
     f8e:	24 83       	std	Z+4, r18	; 0x04
     f90:	35 83       	std	Z+5, r19	; 0x05
     f92:	46 83       	std	Z+6, r20	; 0x06
     f94:	57 83       	std	Z+7, r21	; 0x07
     f96:	08 95       	ret

00000f98 <__fpcmp_parts_f>:
     f98:	fc 01       	movw	r30, r24
     f9a:	db 01       	movw	r26, r22
     f9c:	90 81       	ld	r25, Z
     f9e:	92 30       	cpi	r25, 0x02	; 2
     fa0:	08 f4       	brcc	.+2      	; 0xfa4 <__fpcmp_parts_f+0xc>
     fa2:	49 c0       	rjmp	.+146    	; 0x1036 <__fpcmp_parts_f+0x9e>
     fa4:	8c 91       	ld	r24, X
     fa6:	82 30       	cpi	r24, 0x02	; 2
     fa8:	08 f4       	brcc	.+2      	; 0xfac <__fpcmp_parts_f+0x14>
     faa:	45 c0       	rjmp	.+138    	; 0x1036 <__fpcmp_parts_f+0x9e>
     fac:	94 30       	cpi	r25, 0x04	; 4
     fae:	51 f4       	brne	.+20     	; 0xfc4 <__fpcmp_parts_f+0x2c>
     fb0:	61 81       	ldd	r22, Z+1	; 0x01
     fb2:	84 30       	cpi	r24, 0x04	; 4
     fb4:	b1 f5       	brne	.+108    	; 0x1022 <__fpcmp_parts_f+0x8a>
     fb6:	11 96       	adiw	r26, 0x01	; 1
     fb8:	2c 91       	ld	r18, X
     fba:	11 97       	sbiw	r26, 0x01	; 1
     fbc:	30 e0       	ldi	r19, 0x00	; 0
     fbe:	26 1b       	sub	r18, r22
     fc0:	31 09       	sbc	r19, r1
     fc2:	41 c0       	rjmp	.+130    	; 0x1046 <__fpcmp_parts_f+0xae>
     fc4:	84 30       	cpi	r24, 0x04	; 4
     fc6:	21 f0       	breq	.+8      	; 0xfd0 <__fpcmp_parts_f+0x38>
     fc8:	92 30       	cpi	r25, 0x02	; 2
     fca:	41 f4       	brne	.+16     	; 0xfdc <__fpcmp_parts_f+0x44>
     fcc:	82 30       	cpi	r24, 0x02	; 2
     fce:	b1 f1       	breq	.+108    	; 0x103c <__fpcmp_parts_f+0xa4>
     fd0:	11 96       	adiw	r26, 0x01	; 1
     fd2:	8c 91       	ld	r24, X
     fd4:	11 97       	sbiw	r26, 0x01	; 1
     fd6:	88 23       	and	r24, r24
     fd8:	a1 f1       	breq	.+104    	; 0x1042 <__fpcmp_parts_f+0xaa>
     fda:	2d c0       	rjmp	.+90     	; 0x1036 <__fpcmp_parts_f+0x9e>
     fdc:	61 81       	ldd	r22, Z+1	; 0x01
     fde:	82 30       	cpi	r24, 0x02	; 2
     fe0:	01 f1       	breq	.+64     	; 0x1022 <__fpcmp_parts_f+0x8a>
     fe2:	11 96       	adiw	r26, 0x01	; 1
     fe4:	8c 91       	ld	r24, X
     fe6:	11 97       	sbiw	r26, 0x01	; 1
     fe8:	68 17       	cp	r22, r24
     fea:	d9 f4       	brne	.+54     	; 0x1022 <__fpcmp_parts_f+0x8a>
     fec:	22 81       	ldd	r18, Z+2	; 0x02
     fee:	33 81       	ldd	r19, Z+3	; 0x03
     ff0:	12 96       	adiw	r26, 0x02	; 2
     ff2:	8d 91       	ld	r24, X+
     ff4:	9c 91       	ld	r25, X
     ff6:	13 97       	sbiw	r26, 0x03	; 3
     ff8:	82 17       	cp	r24, r18
     ffa:	93 07       	cpc	r25, r19
     ffc:	94 f0       	brlt	.+36     	; 0x1022 <__fpcmp_parts_f+0x8a>
     ffe:	28 17       	cp	r18, r24
    1000:	39 07       	cpc	r19, r25
    1002:	bc f0       	brlt	.+46     	; 0x1032 <__fpcmp_parts_f+0x9a>
    1004:	24 81       	ldd	r18, Z+4	; 0x04
    1006:	35 81       	ldd	r19, Z+5	; 0x05
    1008:	46 81       	ldd	r20, Z+6	; 0x06
    100a:	57 81       	ldd	r21, Z+7	; 0x07
    100c:	14 96       	adiw	r26, 0x04	; 4
    100e:	8d 91       	ld	r24, X+
    1010:	9d 91       	ld	r25, X+
    1012:	0d 90       	ld	r0, X+
    1014:	bc 91       	ld	r27, X
    1016:	a0 2d       	mov	r26, r0
    1018:	82 17       	cp	r24, r18
    101a:	93 07       	cpc	r25, r19
    101c:	a4 07       	cpc	r26, r20
    101e:	b5 07       	cpc	r27, r21
    1020:	18 f4       	brcc	.+6      	; 0x1028 <__fpcmp_parts_f+0x90>
    1022:	66 23       	and	r22, r22
    1024:	41 f0       	breq	.+16     	; 0x1036 <__fpcmp_parts_f+0x9e>
    1026:	0d c0       	rjmp	.+26     	; 0x1042 <__fpcmp_parts_f+0xaa>
    1028:	28 17       	cp	r18, r24
    102a:	39 07       	cpc	r19, r25
    102c:	4a 07       	cpc	r20, r26
    102e:	5b 07       	cpc	r21, r27
    1030:	28 f4       	brcc	.+10     	; 0x103c <__fpcmp_parts_f+0xa4>
    1032:	66 23       	and	r22, r22
    1034:	31 f0       	breq	.+12     	; 0x1042 <__fpcmp_parts_f+0xaa>
    1036:	21 e0       	ldi	r18, 0x01	; 1
    1038:	30 e0       	ldi	r19, 0x00	; 0
    103a:	05 c0       	rjmp	.+10     	; 0x1046 <__fpcmp_parts_f+0xae>
    103c:	20 e0       	ldi	r18, 0x00	; 0
    103e:	30 e0       	ldi	r19, 0x00	; 0
    1040:	02 c0       	rjmp	.+4      	; 0x1046 <__fpcmp_parts_f+0xae>
    1042:	2f ef       	ldi	r18, 0xFF	; 255
    1044:	3f ef       	ldi	r19, 0xFF	; 255
    1046:	c9 01       	movw	r24, r18
    1048:	08 95       	ret

0000104a <__prologue_saves__>:
    104a:	2f 92       	push	r2
    104c:	3f 92       	push	r3
    104e:	4f 92       	push	r4
    1050:	5f 92       	push	r5
    1052:	6f 92       	push	r6
    1054:	7f 92       	push	r7
    1056:	8f 92       	push	r8
    1058:	9f 92       	push	r9
    105a:	af 92       	push	r10
    105c:	bf 92       	push	r11
    105e:	cf 92       	push	r12
    1060:	df 92       	push	r13
    1062:	ef 92       	push	r14
    1064:	ff 92       	push	r15
    1066:	0f 93       	push	r16
    1068:	1f 93       	push	r17
    106a:	cf 93       	push	r28
    106c:	df 93       	push	r29
    106e:	cd b7       	in	r28, 0x3d	; 61
    1070:	de b7       	in	r29, 0x3e	; 62
    1072:	ca 1b       	sub	r28, r26
    1074:	db 0b       	sbc	r29, r27
    1076:	0f b6       	in	r0, 0x3f	; 63
    1078:	f8 94       	cli
    107a:	de bf       	out	0x3e, r29	; 62
    107c:	0f be       	out	0x3f, r0	; 63
    107e:	cd bf       	out	0x3d, r28	; 61
    1080:	09 94       	ijmp

00001082 <__epilogue_restores__>:
    1082:	2a 88       	ldd	r2, Y+18	; 0x12
    1084:	39 88       	ldd	r3, Y+17	; 0x11
    1086:	48 88       	ldd	r4, Y+16	; 0x10
    1088:	5f 84       	ldd	r5, Y+15	; 0x0f
    108a:	6e 84       	ldd	r6, Y+14	; 0x0e
    108c:	7d 84       	ldd	r7, Y+13	; 0x0d
    108e:	8c 84       	ldd	r8, Y+12	; 0x0c
    1090:	9b 84       	ldd	r9, Y+11	; 0x0b
    1092:	aa 84       	ldd	r10, Y+10	; 0x0a
    1094:	b9 84       	ldd	r11, Y+9	; 0x09
    1096:	c8 84       	ldd	r12, Y+8	; 0x08
    1098:	df 80       	ldd	r13, Y+7	; 0x07
    109a:	ee 80       	ldd	r14, Y+6	; 0x06
    109c:	fd 80       	ldd	r15, Y+5	; 0x05
    109e:	0c 81       	ldd	r16, Y+4	; 0x04
    10a0:	1b 81       	ldd	r17, Y+3	; 0x03
    10a2:	aa 81       	ldd	r26, Y+2	; 0x02
    10a4:	b9 81       	ldd	r27, Y+1	; 0x01
    10a6:	ce 0f       	add	r28, r30
    10a8:	d1 1d       	adc	r29, r1
    10aa:	0f b6       	in	r0, 0x3f	; 63
    10ac:	f8 94       	cli
    10ae:	de bf       	out	0x3e, r29	; 62
    10b0:	0f be       	out	0x3f, r0	; 63
    10b2:	cd bf       	out	0x3d, r28	; 61
    10b4:	ed 01       	movw	r28, r26
    10b6:	08 95       	ret

000010b8 <_exit>:
    10b8:	f8 94       	cli

000010ba <__stop_program>:
    10ba:	ff cf       	rjmp	.-2      	; 0x10ba <__stop_program>
